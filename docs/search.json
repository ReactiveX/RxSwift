{"Other%20Typealiases.html#/s:7RxSwift0A12TimeIntervala":{"name":"RxTimeInterval","abstract":"<p>Undocumented</p>"},"Other%20Typealiases.html#/s:7RxSwift0A4Timea":{"name":"RxTime","abstract":"<p>Type that represents absolute time in the context of RxSwift.</p>"},"Other%20Typealiases.html#/s:7RxSwift0A15AbstractIntegera":{"name":"RxAbstractInteger","abstract":"<p>Undocumented</p>"},"Other%20Typealiases.html#/s:7RxSwift11SingleEventa":{"name":"SingleEvent","abstract":"<p>Undocumented</p>"},"Structs/Resources.html#/total":{"name":"total","abstract":"<p>Counts internal Rx resource allocations (Observables, Observers, Disposables, etc.). This provides a simple way to detect leaks during development.</p>","parent_name":"Resources"},"Structs/Resources.html#/incrementTotal()":{"name":"incrementTotal()","abstract":"<p>Increments <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Resources.html#/total\">Resources.total</a></code> resource count.</p>","parent_name":"Resources"},"Structs/Resources.html#/decrementTotal()":{"name":"decrementTotal()","abstract":"<p>Decrements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Resources.html#/total\">Resources.total</a></code> resource count</p>","parent_name":"Resources"},"Structs/Resources.html#/numberOfSerialDispatchQueueObservables":{"name":"numberOfSerialDispatchQueueObservables","abstract":"<p>Counts number of <code>SerialDispatchQueueObservables</code>.</p>","parent_name":"Resources"},"Structs/Resources.html":{"name":"Resources","abstract":"<p>Resource utilization information</p>"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypeP5TraitQa":{"name":"Trait","abstract":"<p>Additional constraints</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypeP7ElementQa":{"name":"Element","abstract":"<p>Sequence element type</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypeP09primitiveD0AA0cD0Vy5TraitQz7ElementQzGvp":{"name":"primitiveSequence","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE7andThenyAA0cD0VyAA06SingleI0Oqd__GAQlF":{"name":"andThen(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE7andThenyAA0cD0VyAA05MaybeI0Oqd__GAQlF":{"name":"andThen(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE7andThenyAA0cD0VyAiEGAOF":{"name":"andThen(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE7andThenyAA10ObservableCyqd__GAOlF":{"name":"andThen(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE0H8Observera":{"name":"CompletableObserver","abstract":"<p>Undocumented</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE6create9subscribeAA0cD0VyAiEGAA10Disposable_pyAA0H5EventOcc_tFZ":{"name":"create(subscribe:)","abstract":"<p>Creates an observable sequence from a specified subscribe method implementation.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE9subscribeyAA10Disposable_pyAA0H5EventOcF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE9subscribe4with11onCompleted0L5Error0L8DisposedAA10Disposable_pqd___yqd__cSgyqd___s0N0_ptcSgARtRld__ClF":{"name":"subscribe(with:onCompleted:onError:onDisposed:)","abstract":"<p>Subscribes a completion handler and an error handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE9subscribe11onCompleted0K5Error0K8DisposedAA10Disposable_pyycSg_ys0M0_pcSgAQtF":{"name":"subscribe(onCompleted:onError:onDisposed:)","abstract":"<p>Subscribes a completion handler and an error handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE5erroryAA0cD0VyAiEGs5Error_pFZ":{"name":"error(_:)","abstract":"<p>Returns an observable sequence that terminates with an <code>error</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE5neverAA0cD0VyAiEGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating observable sequence, which can be used to denote an infinite duration.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE5emptyAA0cD0VyAiEGyFZ":{"name":"empty()","abstract":"<p>Returns an empty observable sequence, using the specified scheduler to send out the single <code>Completed</code> message.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE2do7onError05afterL00K9Completed0mN00K9Subscribe0K10Subscribed0K7DisposeAA0cD0VyAiEGys0L0_pKcSg_AXyyKcSgAYyycSgA2ZtF":{"name":"do(onError:afterError:onCompleted:afterCompleted:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE6concatyAA0cD0VyAiEGAOF":{"name":"concat(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE6concatyAA0cD0VyAiEGqd__STRd__AoFRtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE6concatyAA0cD0VyAiEGqd__SlRd__AoFRtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE6concatyAA0cD0VyAiEGAOd_tFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE3zipyAA0cD0VyAiEGqd__SlRd__AoFRtd__lFZ":{"name":"zip(_:)","abstract":"<p>Merges the completion of all Completables from a collection into a single Completable.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE3zipyAA0cD0VyAiEGSayAOGFZ":{"name":"zip(_:)","abstract":"<p>Merges the completion of all Completables from an array into a single Completable.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE3zipyAA0cD0VyAiEGAOd_tFZ":{"name":"zip(_:)","abstract":"<p>Merges the completion of all Completables into a single Completable.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE0F8Observera":{"name":"MaybeObserver","abstract":"<p>Undocumented</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE6create9subscribeAA0cD0VyAE7ElementQzGAA10Disposable_pyAA0F5EventOyAMGcc_tFZ":{"name":"create(subscribe:)","abstract":"<p>Creates an observable sequence from a specified subscribe method implementation.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE9subscribeyAA10Disposable_pyAA0F5EventOy7ElementQzGcF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE9subscribe4with9onSuccess0J5Error0J9Completed0J8DisposedAA10Disposable_pqd___yqd___7ElementQztcSgyqd___s0L0_ptcSgyqd__cSgATtRld__ClF":{"name":"subscribe(with:onSuccess:onError:onCompleted:onDisposed:)","abstract":"<p>Subscribes a success handler, an error handler, and a completion handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE9subscribe9onSuccess0I5Error0I9Completed0I8DisposedAA10Disposable_py7ElementQzcSg_ys0K0_pcSgyycSgAStF":{"name":"subscribe(onSuccess:onError:onCompleted:onDisposed:)","abstract":"<p>Subscribes a success handler, an error handler, and a completion handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE4justyAA0cD0VyAE7ElementQzGALFZ":{"name":"just(_:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE4just_9schedulerAA0cD0VyAE7ElementQzGAM_AA018ImmediateSchedulerE0_ptFZ":{"name":"just(_:scheduler:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE5erroryAA0cD0VyAE7ElementQzGs5Error_pFZ":{"name":"error(_:)","abstract":"<p>Returns an observable sequence that terminates with an <code>error</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE5neverAA0cD0VyAE7ElementQzGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating observable sequence, which can be used to denote an infinite duration.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE5emptyAA0cD0VyAE7ElementQzGyFZ":{"name":"empty()","abstract":"<p>Returns an empty observable sequence, using the specified scheduler to send out the single <code>Completed</code> message.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE2do6onNext05afterJ00I5Error0kL00I9Completed0kM00I9Subscribe0I10Subscribed0I7DisposeAA0cD0VyAE7ElementQzGyAUKcSg_AWys0L0_pKcSgAYyyKcSgAZyycSgA_A_tF":{"name":"do(onNext:afterNext:onError:afterError:onCompleted:afterCompleted:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE6filteryAA0cD0VyAE7ElementQzGSbALKcF":{"name":"filter(_:)","abstract":"<p>Filters the elements of an observable sequence based on a predicate.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE3mapyAA0cD0VyAEqd__Gqd__7ElementQzKclF":{"name":"map(_:)","abstract":"<p>Projects each element of an observable sequence into a new form.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE10compactMapyAA0cD0VyAEqd__Gqd__Sg7ElementQzKclF":{"name":"compactMap(_:)","abstract":"<p>Projects each element of an observable sequence into an optional form and filters all optional results.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE7flatMapyAA0cD0VyAEqd__GAK7ElementQzKclF":{"name":"flatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE7ifEmpty7defaultAA0cD0VyAA06SingleG0O7ElementQzGAO_tF":{"name":"ifEmpty(default:)","abstract":"<p>Emits elements from the source observable sequence, or a default element if the source observable sequence is empty.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE7ifEmpty8switchToAA0cD0VyAE7ElementQzGAN_tF":{"name":"ifEmpty(switchTo:)","abstract":"<p>Returns the elements of the specified sequence or <code>other</code> sequence if the sequence is empty.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE7ifEmpty8switchToAA0cD0VyAA06SingleG0O7ElementQzGAP_tF":{"name":"ifEmpty(switchTo:)","abstract":"<p>Returns the elements of the specified sequence or <code>other</code> sequence if the sequence is empty.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE14catchAndReturnyAA0cD0VyAE7ElementQzGALF":{"name":"catchAndReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE20catchErrorJustReturnyAA0cD0VyAE7ElementQzGALF":{"name":"catchErrorJustReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE5value7ElementQzvp":{"name":"value","abstract":"<p>Allows awaiting the success or failure of this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbRxSwift%2FTraits%2FPrimitiveSequence.html#/s:7RxSwift6Singlea\">Single</a></code>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE5value7ElementQzSgvp":{"name":"value","abstract":"<p>Allows awaiting the success or failure of this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbRxSwift%2FTraits%2FPrimitiveSequence.html#/s:7RxSwift5Maybea\">Maybe</a></code>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs5NeverO7ElementRtzAA16CompletableTraitO0I0RtzrlE5valueytvp":{"name":"value","abstract":"<p>Allows awaiting the success or failure of this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbRxSwift%2FTraits%2FPrimitiveSequence.html#/s:7RxSwift11Completablea\">Completable</a></code>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zip__14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAMqd___qd_0_tKctr0_lFZ":{"name":"zip(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA11SingleTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_tGALyAGqd__G_ALyAGqd_0_Gtr0_lFZ":{"name":"zip(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE3zip__14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAMqd___qd_0_tKctr0_lFZ":{"name":"zip(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA10MaybeTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_tGALyAGqd__G_ALyAGqd_0_Gtr0_lFZ":{"name":"zip(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zip___14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAMqd___qd_0_qd_1_tKctr1_lFZ":{"name":"zip(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA11SingleTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_Gtr1_lFZ":{"name":"zip(_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE3zip___14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAMqd___qd_0_qd_1_tKctr1_lFZ":{"name":"zip(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA10MaybeTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_Gtr1_lFZ":{"name":"zip(_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zip____14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAMqd___qd_0_qd_1_qd_2_tKctr2_lFZ":{"name":"zip(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA11SingleTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_Gtr2_lFZ":{"name":"zip(_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE3zip____14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAMqd___qd_0_qd_1_qd_2_tKctr2_lFZ":{"name":"zip(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA10MaybeTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_Gtr2_lFZ":{"name":"zip(_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zip_____14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAMqd___qd_0_qd_1_qd_2_qd_3_tKctr3_lFZ":{"name":"zip(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA11SingleTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_Gtr3_lFZ":{"name":"zip(_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE3zip_____14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAMqd___qd_0_qd_1_qd_2_qd_3_tKctr3_lFZ":{"name":"zip(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA10MaybeTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_Gtr3_lFZ":{"name":"zip(_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zip______14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_tKctr4_lFZ":{"name":"zip(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA11SingleTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_Gtr4_lFZ":{"name":"zip(_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE3zip______14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_tKctr4_lFZ":{"name":"zip(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA10MaybeTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_Gtr4_lFZ":{"name":"zip(_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zip_______14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAKyAEqd_5_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tKctr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA11SingleTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_GALyAGqd_5_Gtr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE3zip_______14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAKyAEqd_5_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tKctr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA10MaybeTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_GALyAGqd_5_Gtr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zip________14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAKyAEqd_5_GAKyAEqd_6_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tKctr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA11SingleTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_GALyAGqd_5_GALyAGqd_6_Gtr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A10MaybeTraitO0G0RtzrlE3zip________14resultSelectorAA0cD0VyAE7ElementQzGAKyAEqd__G_AKyAEqd_0_GAKyAEqd_1_GAKyAEqd_2_GAKyAEqd_3_GAKyAEqd_4_GAKyAEqd_5_GAKyAEqd_6_GAMqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tKctr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAyp7ElementRtzAA10MaybeTraitO0H0RtzrlE3zipyAA0cD0VyAGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tGALyAGqd__G_ALyAGqd_0_GALyAGqd_1_GALyAGqd_2_GALyAGqd_3_GALyAGqd_4_GALyAGqd_5_GALyAGqd_6_Gtr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePAAs17FixedWidthInteger7ElementRpzrlE5timer_9schedulerAA0cD0Vy5TraitQzAFG8Dispatch0M12TimeIntervalO_AA09SchedulerE0_ptFZ":{"name":"timer(_:scheduler:)","abstract":"<p>Returns an observable sequence that periodically produces a value after the specified initial relative due time has elapsed, using the specified scheduler to run timers.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE0F8Observera":{"name":"SingleObserver","abstract":"<p>Undocumented</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE6create9subscribeAA0cD0VyAE7ElementQzGAA10Disposable_pys6ResultOyAMs5Error_pGcc_tFZ":{"name":"create(subscribe:)","abstract":"<p>Creates an observable sequence from a specified subscribe method implementation.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE9subscribeyAA10Disposable_pys6ResultOy7ElementQzs5Error_pGcF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE9subscribe9onSuccess0I5Error0I8DisposedAA10Disposable_py7ElementQzcSg_ys0K0_pcyycSgtF":{"name":"subscribe(onSuccess:onError:onDisposed:)","abstract":"<p>Subscribes a success handler, and an error handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE9subscribe4with9onSuccess0J7Failure0J8DisposedAA10Disposable_pqd___yqd___7ElementQztcSgyqd___s5Error_ptcSgyqd__cSgtRld__ClF":{"name":"subscribe(with:onSuccess:onFailure:onDisposed:)","abstract":"<p>Subscribes a success handler, and an error handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE9subscribe9onSuccess0I7Failure0I8DisposedAA10Disposable_py7ElementQzcSg_ys5Error_pcSgyycSgtF":{"name":"subscribe(onSuccess:onFailure:onDisposed:)","abstract":"<p>Subscribes a success handler, and an error handler for this sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE4justyAA0cD0VyAE7ElementQzGALFZ":{"name":"just(_:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE4just_9schedulerAA0cD0VyAE7ElementQzGAM_AA018ImmediateSchedulerE0_ptFZ":{"name":"just(_:scheduler:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE5erroryAA0cD0VyAE7ElementQzGs5Error_pFZ":{"name":"error(_:)","abstract":"<p>Returns an observable sequence that terminates with an <code>error</code>.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE5neverAA0cD0VyAE7ElementQzGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating observable sequence, which can be used to denote an infinite duration.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE2do9onSuccess05afterJ00I5Error0kL00I9Subscribe0I10Subscribed0I7DisposeAA0cD0VyAE7ElementQzGyASKcSg_AUys0L0_pKcSgAWyycSgA2XtF":{"name":"do(onSuccess:afterSuccess:onError:afterError:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE6filteryAA0cD0VyAA05MaybeG0O7ElementQzGSbANKcF":{"name":"filter(_:)","abstract":"<p>Filters the elements of an observable sequence based on a predicate.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3mapyAA0cD0VyAEqd__Gqd__7ElementQzKclF":{"name":"map(_:)","abstract":"<p>Projects each element of an observable sequence into a new form.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE10compactMapyAA0cD0VyAA05MaybeG0Oqd__Gqd__Sg7ElementQzKclF":{"name":"compactMap(_:)","abstract":"<p>Projects each element of an observable sequence into an optional form and filters all optional results.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE7flatMapyAA0cD0VyAEqd__GAK7ElementQzKclF":{"name":"flatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE12flatMapMaybeyAA0cD0VyAA0jG0Oqd__GAM7ElementQzKclF":{"name":"flatMapMaybe(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE18flatMapCompletableyAA0cD0VyAA0jG0Os5NeverOGAO7ElementQzKcF":{"name":"flatMapCompletable(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zip_14resultSelectorAA0cD0VyAEqd_0_Gqd___qd_0_Say7ElementQzGKctSlRd__AKyAeNGAMRtd__r0_lFZ":{"name":"zip(_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE3zipyAA0cD0VyAESay7ElementQzGGqd__SlRd__AJyAeLGAKRtd__lFZ":{"name":"zip(_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE14catchAndReturnyAA0cD0VyAE7ElementQzGALF":{"name":"catchAndReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE20catchErrorJustReturnyAA0cD0VyAE7ElementQzGALF":{"name":"catchErrorJustReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE7asMaybeAA0cD0VyAA0iG0O7ElementQzGyF":{"name":"asMaybe()","abstract":"<p>Converts <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbRxSwift%2FTraits%2FPrimitiveSequence.html#/s:7RxSwift5Maybea\">Maybe</a></code> trait.</p>","parent_name":"PrimitiveSequenceType"},"Protocols/PrimitiveSequenceType.html#/s:7RxSwift21PrimitiveSequenceTypePA2A11SingleTraitO0G0RtzrlE13asCompletableAA0cD0VyAA0iG0Os5NeverOGyF":{"name":"asCompletable()","abstract":"<p>Converts <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbRxSwift%2FTraits%2FPrimitiveSequence.html#/s:7RxSwift11Completablea\">Completable</a></code> trait, ignoring its emitted value if","parent_name":"PrimitiveSequenceType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE6valuesScSy7ElementQzGvp":{"name":"values","abstract":"<p>Allows iterating over the values of an Infallible","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4justyAA0C0Vy7ElementQzGAHFZ":{"name":"just(_:)","abstract":"<p>Returns an infallible sequence that contains a single element.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4just_9schedulerAA0C0Vy7ElementQzGAI_AA018ImmediateSchedulerD0_ptFZ":{"name":"just(_:scheduler:)","abstract":"<p>Returns an infallible sequence that contains a single element.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE5neverAA0C0Vy7ElementQzGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating infallible sequence, which can be used to denote an infinite duration.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE5emptyAA0C0Vy7ElementQzGyFZ":{"name":"empty()","abstract":"<p>Returns an empty infallible sequence, using the specified scheduler to send out the single <code>Completed</code> message.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE8deferredyAA0C0Vy7ElementQzGAIyKcFZ":{"name":"deferred(_:)","abstract":"<p>Returns an infallible sequence that invokes the specified factory function whenever a new observer subscribes.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE6filteryAA0C0Vy7ElementQzGSbAHcF":{"name":"filter(_:)","abstract":"<p>Filters the elements of an observable sequence based on a predicate.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE3mapyAA0C0Vyqd__Gqd__7ElementQzclF":{"name":"map(_:)","abstract":"<p>Projects each element of an observable sequence into a new form.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE10compactMapyAA0C0Vyqd__Gqd__Sg7ElementQzclF":{"name":"compactMap(_:)","abstract":"<p>Projects each element of an observable sequence into an optional form and filters all optional results.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE20distinctUntilChangedyAA0C0Vy7ElementQzGqd__AHKcSQRd__lF":{"name":"distinctUntilChanged(_:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the <code>keySelector</code>.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE20distinctUntilChangedyAA0C0Vy7ElementQzGSbAH_AHtKcF":{"name":"distinctUntilChanged(_:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the <code>comparer</code>.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE20distinctUntilChanged_8comparerAA0C0Vy7ElementQzGqd__AIKc_Sbqd___qd__tKctlF":{"name":"distinctUntilChanged(_:comparer:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the keySelector and the comparer.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE20distinctUntilChanged2atAA0C0Vy7ElementQzGs7KeyPathCyAIqd__G_tSQRd__lF":{"name":"distinctUntilChanged(at:)","abstract":"<p>Returns an observable sequence that contains only contiguous elements with distinct values in the provided key path on each object.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE8debounce_9schedulerAA0C0Vy7ElementQzG8Dispatch0H12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"debounce(_:scheduler:)","abstract":"<p>Ignores elements from an observable sequence which are followed by another element within a specified relative time duration, using the specified scheduler to run throttling timers.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE8throttle_6latest9schedulerAA0C0Vy7ElementQzG8Dispatch0I12TimeIntervalO_SbAA09SchedulerD0_ptF":{"name":"throttle(_:latest:scheduler:)","abstract":"<p>Returns an Observable that emits the first and the latest item emitted by the source Observable during sequential time windows of a specified duration.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE7flatMapyAA0C0Vy7ElementQyd__Gqd__AGQzcAA021ObservableConvertibleD0Rd__lF":{"name":"flatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE13flatMapLatestyAA0C0Vy7ElementQyd__Gqd__AGQzcAA021ObservableConvertibleD0Rd__lF":{"name":"flatMapLatest(_:)","abstract":"<p>Projects each element of an observable sequence into a new sequence of observable sequences and then","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE12flatMapFirstyAA0C0Vy7ElementQyd__Gqd__AGQzcAA021ObservableConvertibleD0Rd__lF":{"name":"flatMapFirst(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE6concatyAA0C0Vy7ElementQzGqd__AA021ObservableConvertibleD0Rd__AGQyd__AHRSlF":{"name":"concat(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE6concatyAA0C0Vy7ElementQzGqd__STRd__AiGRtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE6concatyAA0C0Vy7ElementQzGqd__SlRd__AiGRtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given collection, as long as the previous observable sequence terminated successfully.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE6concatyAA0C0Vy7ElementQzGAId_tFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given collection, as long as the previous observable sequence terminated successfully.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE9concatMapyAA0C0Vy7ElementQyd__Gqd__AGQzcAA021ObservableConvertibleD0Rd__lF":{"name":"concatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and concatenates the resulting observable sequences into one observable sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE5mergeyAA0C0Vy7ElementQzGqd__SlRd__AiGRtd__lFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences from collection into a single observable sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE5mergeyAA0C0Vy7ElementQzGSayAIGFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all infallible sequences from array into a single infallible sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE5mergeyAA0C0Vy7ElementQzGAId_tFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all infallible sequences into a single infallible sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4scan4into11accumulatorAA0C0Vyqd__Gqd___yqd__z_7ElementQztctlF":{"name":"scan(into:accumulator:)","abstract":"<p>Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4scan_11accumulatorAA0C0Vyqd__Gqd___qd__qd___7ElementQztctlF":{"name":"scan(_:accumulator:)","abstract":"<p>Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE9startWithyAA0C0Vy7ElementQzGAHF":{"name":"startWith(_:)","abstract":"<p>Prepends a value to an observable sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4take5untilAA0C0Vy7ElementQzGqd___tAaBRd__lF":{"name":"take(until:)","abstract":"<p>Returns the elements from the source observable sequence until the other observable sequence produces an element.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4take5untilAA0C0Vy7ElementQzGqd___tAA010ObservableD0Rd__lF":{"name":"take(until:)","abstract":"<p>Returns the elements from the source observable sequence until the other observable sequence produces an element.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4take5until8behaviorAA0C0Vy7ElementQzGSbAJKc_AA12TakeBehaviorOtF":{"name":"take(until:behavior:)","abstract":"<p>Returns elements from an observable sequence until the specified condition is true.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4take5while8behaviorAA0C0Vy7ElementQzGSbAJKc_AA12TakeBehaviorOtF":{"name":"take(while:behavior:)","abstract":"<p>Returns elements from an observable sequence as long as a specified condition is true.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4takeyAA0C0Vy7ElementQzGSiF":{"name":"take(_:)","abstract":"<p>Returns a specified number of contiguous elements from the start of an observable sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4take3for9schedulerAA0C0Vy7ElementQzG8Dispatch0I12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"take(for:scheduler:)","abstract":"<p>Takes elements for the specified duration from the start of the infallible source sequence, using the specified scheduler to run timers.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4skip5whileAA0C0Vy7ElementQzGSbAIKc_tF":{"name":"skip(while:)","abstract":"<p>Bypasses elements in an infallible sequence as long as a specified condition is true and then returns the remaining elements.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE4skip5untilAA0C0Vy7ElementQzGqd___tAA010ObservableD0Rd__lF":{"name":"skip(until:)","abstract":"<p>Returns the elements from the source infallible sequence that are emitted after the other infallible sequence produces an element.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE5share6replay5scopeAA0C0Vy7ElementQzGSi_AA20SubjectLifetimeScopeOtF":{"name":"share(replay:scope:)","abstract":"<p>Returns an observable sequence that <strong>shares a single subscription to the underlying sequence</strong>, and immediately upon subscription replays  elements in buffer.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE14withUnretained_14resultSelectorAA0C0Vyqd_0_Gqd___qd_0_qd___7ElementQztctRld__Cr0_lF":{"name":"withUnretained(_:resultSelector:)","abstract":"<p>Provides an unretained, safe to use (i.e. not implicitly unwrapped), reference to an object along with the events emitted by the sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE14withUnretainedyAA0C0Vyqd___7ElementQztGqd__Rld__ClF":{"name":"withUnretained(_:)","abstract":"<p>Provides an unretained, safe to use (i.e. not implicitly unwrapped), reference to an object along with the events emitted by the sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE14withLatestFrom_14resultSelectorAA0C0Vyqd_0_Gqd___qd_0_7ElementQz_AIQyd__tKctAaBRd__r0_lF":{"name":"withLatestFrom(_:resultSelector:)","abstract":"<p>Merges two observable sequences into one observable sequence by combining each element from self with the latest element from the second source, if any.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE14withLatestFromyAA0C0Vy7ElementQyd__Gqd__AaBRd__lF":{"name":"withLatestFrom(_:)","abstract":"<p>Merges two observable sequences into one observable sequence by using latest element from the second sequence every time when <code>self</code> emits an element.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE3zip__14resultSelectorAA0C0Vy7ElementQzGAGyqd__G_AGyqd_0_GAIqd___qd_0_tKctr0_lFZ":{"name":"zip(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE3zip___14resultSelectorAA0C0Vy7ElementQzGAGyqd__G_AGyqd_0_GAGyqd_1_GAIqd___qd_0_qd_1_tKctr1_lFZ":{"name":"zip(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE3zip____14resultSelectorAA0C0Vy7ElementQzGAGyqd__G_AGyqd_0_GAGyqd_1_GAGyqd_2_GAIqd___qd_0_qd_1_qd_2_tKctr2_lFZ":{"name":"zip(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE3zip_____14resultSelectorAA0C0Vy7ElementQzGAGyqd__G_AGyqd_0_GAGyqd_1_GAGyqd_2_GAGyqd_3_GAIqd___qd_0_qd_1_qd_2_qd_3_tKctr3_lFZ":{"name":"zip(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE3zip______14resultSelectorAA0C0Vy7ElementQzGAGyqd__G_AGyqd_0_GAGyqd_1_GAGyqd_2_GAGyqd_3_GAGyqd_4_GAIqd___qd_0_qd_1_qd_2_qd_3_qd_4_tKctr4_lFZ":{"name":"zip(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE3zip_______14resultSelectorAA0C0Vy7ElementQzGAGyqd__G_AGyqd_0_GAGyqd_1_GAGyqd_2_GAGyqd_3_GAGyqd_4_GAGyqd_5_GAIqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tKctr5_lFZ":{"name":"zip(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE3zip________14resultSelectorAA0C0Vy7ElementQzGAGyqd__G_AGyqd_0_GAGyqd_1_GAGyqd_2_GAGyqd_3_GAGyqd_4_GAGyqd_5_GAGyqd_6_GAIqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tKctr6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE9subscribe4with6onNext0G9Completed0G8DisposedAA10Disposable_pqd___yqd___7ElementQztcSgyqd__cSgAMtRld__ClF":{"name":"subscribe(with:onNext:onCompleted:onDisposed:)","abstract":"<p>Subscribes an element handler, a completion handler and disposed handler to an observable sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE9subscribe6onNext0F9Completed0F8DisposedAA10Disposable_py7ElementQzcSg_yycSgALtF":{"name":"subscribe(onNext:onCompleted:onDisposed:)","abstract":"<p>Subscribes an element handler, a completion handler and disposed handler to an observable sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAAE9subscribeyAA10Disposable_pyAA5EventOy7ElementQzGcF":{"name":"subscribe(_:)","abstract":"<p>Subscribes an event handler to an observable sequence.</p>","parent_name":"InfallibleType"},"Protocols/InfallibleType.html#/s:7RxSwift14InfallibleTypePAASL7ElementRpzrlE20distinctUntilChangedAA0C0VyAEGyF":{"name":"distinctUntilChanged()","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to equality operator.</p>","parent_name":"InfallibleType"},"Protocols/ReactiveCompatible.html#/s:7RxSwift18ReactiveCompatibleP0C4BaseQa":{"name":"ReactiveBase","abstract":"<p>Extended type</p>","parent_name":"ReactiveCompatible"},"Protocols/ReactiveCompatible.html#/s:7RxSwift18ReactiveCompatibleP2rxAA0C0Vy0C4BaseQzGmvpZ":{"name":"rx","abstract":"<p>Reactive extensions.</p>","parent_name":"ReactiveCompatible"},"Protocols/ReactiveCompatible.html#/s:7RxSwift18ReactiveCompatibleP2rxAA0C0Vy0C4BaseQzGvp":{"name":"rx","abstract":"<p>Reactive extensions.</p>","parent_name":"ReactiveCompatible"},"Protocols/DataDecoder.html#/s:7RxSwift11DataDecoderP6decode_4fromqd__qd__m_10Foundation0C0VtKSeRd__lF":{"name":"decode(_:from:)","abstract":"<p>Undocumented</p>","parent_name":"DataDecoder"},"Protocols/EventConvertible.html#/s:7RxSwift16EventConvertibleP7ElementQa":{"name":"Element","abstract":"<p>Type of element in event</p>","parent_name":"EventConvertible"},"Protocols/EventConvertible.html#/s:7RxSwift16EventConvertibleP5eventAA0C0Oy7ElementQzGvp":{"name":"event","abstract":"<p>Event representation of this instance</p>","parent_name":"EventConvertible"},"Protocols/EventConvertible.html":{"name":"EventConvertible","abstract":"<p>A type that can be converted to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html\">Event&lt;Element&gt;</a></code>.</p>"},"Protocols/DataDecoder.html":{"name":"DataDecoder","abstract":"<p>Represents an entity capable of decoding raw <code>Data</code>"},"Protocols/ReactiveCompatible.html":{"name":"ReactiveCompatible","abstract":"<p>A type that has reactive extensions.</p>"},"Protocols/InfallibleType.html":{"name":"InfallibleType","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Infallible.html\">Infallible</a></code> is an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code>-like push-style interface"},"Protocols/PrimitiveSequenceType.html":{"name":"PrimitiveSequenceType","abstract":"<p>Observable sequences containing 0 or 1 element</p>"},"Extensions/AsyncSequence.html#/s:Sci7RxSwiftE12asObservableAA0D0Cy7ElementQzGyF":{"name":"asObservable()","abstract":"<p>Convert an <code>AsyncSequence</code> to an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> emitting","parent_name":"AsyncSequence"},"Extensions/AsyncSequence.html":{"name":"AsyncSequence"},"Other%20Extensions.html#/s:10Foundation11JSONDecoderC":{"name":"JSONDecoder"},"Other%20Extensions.html#/s:10Foundation19PropertyListDecoderC":{"name":"PropertyListDecoder"},"Other%20Extensions.html#/c:objc(cs)NSObject":{"name":"NSObject","abstract":"<p>Extend NSObject with <code>rx</code> proxy.</p>"},"Enums/MaybeEvent.html#/s:7RxSwift10MaybeEventO7successyACyxGxcAEmlF":{"name":"success(_:)","abstract":"<p>One and only sequence element is produced. (underlying observable sequence emits: <code>.next(Element)</code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/MaybeEvent.html#/s:7RxSwift10MaybeEventO9completedyACyxGAEmlF\">.completed</a></code>)</p>","parent_name":"MaybeEvent"},"Enums/MaybeEvent.html#/s:7RxSwift10MaybeEventO5erroryACyxGs5Error_pcAEmlF":{"name":"error(_:)","abstract":"<p>Sequence terminated with an error. (underlying observable sequence emits: <code>.error(Error)</code>)</p>","parent_name":"MaybeEvent"},"Enums/MaybeEvent.html#/s:7RxSwift10MaybeEventO9completedyACyxGAEmlF":{"name":"completed","abstract":"<p>Sequence completed successfully.</p>","parent_name":"MaybeEvent"},"Enums/CompletableEvent.html#/s:7RxSwift16CompletableEventO5erroryACs5Error_pcACmF":{"name":"error(_:)","abstract":"<p>Sequence terminated with an error. (underlying observable sequence emits: <code>.error(Error)</code>)</p>","parent_name":"CompletableEvent"},"Enums/CompletableEvent.html#/s:7RxSwift16CompletableEventO9completedyA2CmF":{"name":"completed","abstract":"<p>Sequence completed successfully.</p>","parent_name":"CompletableEvent"},"Enums/InfallibleEvent.html#/s:7RxSwift15InfallibleEventO4nextyACyxGxcAEmlF":{"name":"next(_:)","abstract":"<p>Next element is produced.</p>","parent_name":"InfallibleEvent"},"Enums/InfallibleEvent.html#/s:7RxSwift15InfallibleEventO9completedyACyxGAEmlF":{"name":"completed","abstract":"<p>Sequence completed successfully.</p>","parent_name":"InfallibleEvent"},"Enums/VirtualTimeComparison.html#/s:7RxSwift21VirtualTimeComparisonO8lessThanyA2CmF":{"name":"lessThan","abstract":"<p>lhs &lt; rhs.</p>","parent_name":"VirtualTimeComparison"},"Enums/VirtualTimeComparison.html#/s:7RxSwift21VirtualTimeComparisonO5equalyA2CmF":{"name":"equal","abstract":"<p>lhs == rhs.</p>","parent_name":"VirtualTimeComparison"},"Enums/VirtualTimeComparison.html#/s:7RxSwift21VirtualTimeComparisonO11greaterThanyA2CmF":{"name":"greaterThan","abstract":"<p>lhs &gt; rhs.</p>","parent_name":"VirtualTimeComparison"},"Enums/TakeBehavior.html#/s:7RxSwift12TakeBehaviorO9inclusiveyA2CmF":{"name":"inclusive","abstract":"<p>Include the last element matching the predicate.</p>","parent_name":"TakeBehavior"},"Enums/TakeBehavior.html#/s:7RxSwift12TakeBehaviorO9exclusiveyA2CmF":{"name":"exclusive","abstract":"<p>Exclude the last element matching the predicate.</p>","parent_name":"TakeBehavior"},"Enums/SubjectLifetimeScope.html#/s:7RxSwift20SubjectLifetimeScopeO14whileConnectedyA2CmF":{"name":"whileConnected","abstract":"<p><strong>Each connection will have it&rsquo;s own subject instance to store replay events.</strong>","parent_name":"SubjectLifetimeScope"},"Enums/SubjectLifetimeScope.html#/s:7RxSwift20SubjectLifetimeScopeO7foreveryA2CmF":{"name":"forever","abstract":"<p><strong>One subject will store replay events for all connections to source.</strong>","parent_name":"SubjectLifetimeScope"},"Enums/Hooks.html#/s:7RxSwift5HooksO22recordCallStackOnErrorSbvpZ":{"name":"recordCallStackOnError","abstract":"<p>Undocumented</p>","parent_name":"Hooks"},"Enums/Hooks.html#/s:7RxSwift5HooksO19DefaultErrorHandlera":{"name":"DefaultErrorHandler","abstract":"<p>Undocumented</p>","parent_name":"Hooks"},"Enums/Hooks.html#/s:7RxSwift5HooksO34CustomCaptureSubscriptionCallstacka":{"name":"CustomCaptureSubscriptionCallstack","abstract":"<p>Undocumented</p>","parent_name":"Hooks"},"Enums/Hooks.html#/s:7RxSwift5HooksO19defaultErrorHandleryySaySSG_s0E0_ptcvpZ":{"name":"defaultErrorHandler","abstract":"<p>Error handler called in case onError handler wasn&rsquo;t provided.</p>","parent_name":"Hooks"},"Enums/Hooks.html#/s:7RxSwift5HooksO34customCaptureSubscriptionCallstackSaySSGycvpZ":{"name":"customCaptureSubscriptionCallstack","abstract":"<p>Subscription callstack block to fetch custom callstack information.</p>","parent_name":"Hooks"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO7unknownyA2CmF":{"name":"unknown","abstract":"<p>Unknown error occurred.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO8disposedyACyXl_tcACmF":{"name":"disposed(object:)","abstract":"<p>Performing an action on disposed object.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO8overflowyA2CmF":{"name":"overflow","abstract":"<p>Arithmetic overflow error.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO18argumentOutOfRangeyA2CmF":{"name":"argumentOutOfRange","abstract":"<p>Argument out of range error.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO10noElementsyA2CmF":{"name":"noElements","abstract":"<p>Sequence doesn&rsquo;t contain any elements.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO18moreThanOneElementyA2CmF":{"name":"moreThanOneElement","abstract":"<p>Sequence contains more than one element.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO7timeoutyA2CmF":{"name":"timeout","abstract":"<p>Timeout error.</p>","parent_name":"RxError"},"Enums/RxError.html#/s:7RxSwift0A5ErrorO16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A textual representation of <code>self</code>, suitable for debugging.</p>","parent_name":"RxError"},"Enums/RxError.html":{"name":"RxError","abstract":"<p>Generic Rx error codes.</p>"},"Enums/Hooks.html":{"name":"Hooks","abstract":"<p>RxSwift global hooks</p>"},"Enums/SubjectLifetimeScope.html":{"name":"SubjectLifetimeScope","abstract":"<p>Subject lifetime scope</p>"},"Enums/TakeBehavior.html":{"name":"TakeBehavior","abstract":"<p>Behaviors for the take operator family.</p>"},"Enums/VirtualTimeComparison.html":{"name":"VirtualTimeComparison","abstract":"<p>Virtual time comparison result.</p>"},"Enums/InfallibleEvent.html":{"name":"InfallibleEvent","abstract":"<p>Undocumented</p>"},"Other%20Enums.html#/s:7RxSwift16CompletableTraitO":{"name":"CompletableTrait","abstract":"<p>Sequence containing 0 elements</p>"},"Enums/CompletableEvent.html":{"name":"CompletableEvent","abstract":"<p>Undocumented</p>"},"Other%20Enums.html#/s:7RxSwift10MaybeTraitO":{"name":"MaybeTrait","abstract":"<p>Sequence containing 0 or 1 elements</p>"},"Enums/MaybeEvent.html":{"name":"MaybeEvent","abstract":"<p>Undocumented</p>"},"Other%20Enums.html#/s:7RxSwift11SingleTraitO":{"name":"SingleTrait","abstract":"<p>Sequence containing exactly 1 element</p>"},"Other%20Global%20Variables.html#/s:7RxSwift29maxTailRecursiveSinkStackSizeSivp":{"name":"maxTailRecursiveSinkStackSize","abstract":"<p>Undocumented</p>"},"Classes/ConnectableObservable.html#/s:7RxSwift21ConnectableObservableC7connectAA10Disposable_pyF":{"name":"connect()","abstract":"<p>Connects the observable wrapper to its source. All subscribed observers will receive values from the underlying observable sequence as long as the connection is established.</p>","parent_name":"ConnectableObservable"},"Classes/ConnectableObservable.html":{"name":"ConnectableObservable","abstract":"<p>Represents an observable wrapper that can be connected and disconnected from its underlying observable sequence.</p>"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV09primitiveD0ACyxq_Gvp":{"name":"primitiveSequence","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV12asObservableAA0F0Cyq_GyF":{"name":"asObservable()","abstract":"<p>Converts <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> sequence.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV8deferredyACyxq_GAEyKcFZ":{"name":"deferred(_:)","abstract":"<p>Returns an observable sequence that invokes the specified factory function whenever a new observer subscribes.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5delay_9schedulerACyxq_G8Dispatch0G12TimeIntervalO_AA13SchedulerType_ptF":{"name":"delay(_:scheduler:)","abstract":"<p>Returns an observable sequence by the source observable sequence shifted forward in time by a specified delay. Error events from the source observable sequence are not delayed.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV17delaySubscription_9schedulerACyxq_G8Dispatch0H12TimeIntervalO_AA13SchedulerType_ptF":{"name":"delaySubscription(_:scheduler:)","abstract":"<p>Time shifts the observable sequence by delaying the subscription with the specified relative time duration, using the specified scheduler to run timers.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV7observe2onACyxq_GAA22ImmediateSchedulerType_p_tF":{"name":"observe(on:)","abstract":"<p>Wraps the source sequence in order to run its observer callbacks on the specified scheduler.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV9observeOnyACyxq_GAA22ImmediateSchedulerType_pF":{"name":"observeOn(_:)","abstract":"<p>Wraps the source sequence in order to run its observer callbacks on the specified scheduler.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV9subscribe2onACyxq_GAA22ImmediateSchedulerType_p_tF":{"name":"subscribe(on:)","abstract":"<p>Wraps the source sequence in order to run its subscription and unsubscription logic on the specified","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV11subscribeOnyACyxq_GAA22ImmediateSchedulerType_pF":{"name":"subscribeOn(_:)","abstract":"<p>Wraps the source sequence in order to run its subscription and unsubscription logic on the specified","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV10catchErroryACyxq_GAEs0F0_pKcF":{"name":"catchError(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the observable sequence produced by the handler.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5catchyACyxq_GAEs5Error_pKcF":{"name":"catch(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the observable sequence produced by the handler.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5retryyACyxq_GSiF":{"name":"retry(_:)","abstract":"<p>If the initial subscription to the observable sequence emits an error event, try repeating it up to the specified number of attempts (inclusive of the initial attempt) or until is succeeds. For example, if you want to retry a sequence once upon failure, you should use retry(2) (once for the initial attempt, and once for the retry).</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5retry4whenACyxq_Gqd__AA10ObservableCyqd_0_Gc_tAA0G4TypeRd__s5ErrorRd_0_r0_lF":{"name":"retry(when:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV9retryWhenyACyxq_Gqd__AA10ObservableCyqd_0_GcAA0G4TypeRd__s5ErrorRd_0_r0_lF":{"name":"retryWhen(_:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5retry4whenACyxq_Gqd__AA10ObservableCys5Error_pGc_tAA0G4TypeRd__lF":{"name":"retry(when:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV9retryWhenyACyxq_Gqd__AA10ObservableCys5Error_pGcAA0G4TypeRd__lF":{"name":"retryWhen(_:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5debug_10trimOutput4file4line8functionACyxq_GSSSg_SbSSSuSStF":{"name":"debug(_:trimOutput:file:line:function:)","abstract":"<p>Prints received events for all observers on standard output.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV5using_09primitiveD7FactoryACyxq_Gqd__yKc_AFqd__KctAA10DisposableRd__lFZ":{"name":"using(_:primitiveSequenceFactory:)","abstract":"<p>Constructs an observable sequence that depends on a resource object, whose lifetime is tied to the resulting observable sequence&rsquo;s lifetime.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV7timeout_9schedulerACyxq_G8Dispatch0G12TimeIntervalO_AA13SchedulerType_ptF":{"name":"timeout(_:scheduler:)","abstract":"<p>Applies a timeout policy for each element in the observable sequence. If the next element isn&rsquo;t received within the specified timeout duration starting from its predecessor, a TimeoutError is propagated to the observer.</p>","parent_name":"PrimitiveSequence"},"Structs/PrimitiveSequence.html#/s:7RxSwift17PrimitiveSequenceV7timeout_5other9schedulerACyxq_G8Dispatch0H12TimeIntervalO_AgA13SchedulerType_ptF":{"name":"timeout(_:other:scheduler:)","abstract":"<p>Applies a timeout policy for each element in the observable sequence, using the specified scheduler to run timeout timers. If the next element isn&rsquo;t received within the specified timeout duration starting from its predecessor, the other observable sequence is used to produce future messages from that point on.</p>","parent_name":"PrimitiveSequence"},"RxSwift%2FTraits%2FPrimitiveSequence.html#/s:7RxSwift11Completablea":{"name":"Completable","abstract":"<p>Represents a push style sequence containing 0 elements.</p>"},"RxSwift%2FTraits%2FPrimitiveSequence.html#/s:7RxSwift5Maybea":{"name":"Maybe","abstract":"<p>Represents a push style sequence containing 0 or 1 element.</p>"},"Structs/PrimitiveSequence.html":{"name":"PrimitiveSequence","abstract":"<p>Observable sequences containing 0 or 1 element.</p>"},"RxSwift%2FTraits%2FPrimitiveSequence.html#/s:7RxSwift6Singlea":{"name":"Single","abstract":"<p>Represents a push style sequence containing 1 element.</p>"},"Structs/Infallible.html#/s:7RxSwift25ObservableConvertibleTypeP02asC0AA0C0Cy7ElementQzGyF":{"name":"asObservable()","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV13combineLatest__14resultSelectorACyxGqd___qd_0_x7ElementQyd___AGQyd_0_tKctAA0C4TypeRd__AaJRd_0_r0_lFZ":{"name":"combineLatest(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV13combineLatest___14resultSelectorACyxGqd___qd_0_qd_1_x7ElementQyd___AGQyd_0_AGQyd_1_tKctAA0C4TypeRd__AaKRd_0_AaKRd_1_r1_lFZ":{"name":"combineLatest(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV13combineLatest____14resultSelectorACyxGqd___qd_0_qd_1_qd_2_x7ElementQyd___AGQyd_0_AGQyd_1_AGQyd_2_tKctAA0C4TypeRd__AaLRd_0_AaLRd_1_AaLRd_2_r2_lFZ":{"name":"combineLatest(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV13combineLatest_____14resultSelectorACyxGqd___qd_0_qd_1_qd_2_qd_3_x7ElementQyd___AGQyd_0_AGQyd_1_AGQyd_2_AGQyd_3_tKctAA0C4TypeRd__AaMRd_0_AaMRd_1_AaMRd_2_AaMRd_3_r3_lFZ":{"name":"combineLatest(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV13combineLatest______14resultSelectorACyxGqd___qd_0_qd_1_qd_2_qd_3_qd_4_x7ElementQyd___AGQyd_0_AGQyd_1_AGQyd_2_AGQyd_3_AGQyd_4_tKctAA0C4TypeRd__AaNRd_0_AaNRd_1_AaNRd_2_AaNRd_3_AaNRd_4_r4_lFZ":{"name":"combineLatest(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV13combineLatest_______14resultSelectorACyxGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_x7ElementQyd___AGQyd_0_AGQyd_1_AGQyd_2_AGQyd_3_AGQyd_4_AGQyd_5_tKctAA0C4TypeRd__AaORd_0_AaORd_1_AaORd_2_AaORd_3_AaORd_4_AaORd_5_r5_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV13combineLatest________14resultSelectorACyxGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_x7ElementQyd___AGQyd_0_AGQyd_1_AGQyd_2_AGQyd_3_AGQyd_4_AGQyd_5_AGQyd_6_tKctAA0C4TypeRd__AaPRd_0_AaPRd_1_AaPRd_2_AaPRd_3_AaPRd_4_AaPRd_5_AaPRd_6_r6_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV0C8Observera":{"name":"InfallibleObserver","abstract":"<p>Undocumented</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV6create9subscribeACyxGAA10Disposable_pyAA0C5EventOyxGcc_tFZ":{"name":"create(subscribe:)","abstract":"<p>Creates an observable sequence from a specified subscribe method implementation.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV2of_9schedulerACyxGxd_AA22ImmediateSchedulerType_ptFZ":{"name":"of(_:scheduler:)","abstract":"<p>This method creates a new Infallible instance with a variable number of elements.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV4from_9schedulerACyxGSayxG_AA22ImmediateSchedulerType_ptFZ":{"name":"from(_:scheduler:)","abstract":"<p>Converts an array to an Infallible sequence.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV4from_9schedulerACyxGqd___AA22ImmediateSchedulerType_pt7ElementQyd__RszSTRd__lFZ":{"name":"from(_:scheduler:)","abstract":"<p>Converts a sequence to an Infallible sequence.</p>","parent_name":"Infallible"},"Structs/Infallible.html#/s:7RxSwift10InfallibleV2do6onNext05afterF00E9Completed0gH00E9Subscribe0E10Subscribed0E7DisposeACyxGyxKcSg_AMyyKcSgANyycSgA2OtF":{"name":"do(onNext:afterNext:onCompleted:afterCompleted:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the infallible sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"Infallible"},"Structs/Infallible.html":{"name":"Infallible","abstract":"<p><code>Infallible</code> is an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code>-like push-style interface"},"Protocols/SubjectType.html#/s:7RxSwift11SubjectTypeP8ObserverQa":{"name":"Observer","abstract":"<p>The type of the observer that represents this subject.</p>","parent_name":"SubjectType"},"Protocols/SubjectType.html#/s:7RxSwift11SubjectTypeP10asObserver0F0QzyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"SubjectType"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC0D12ObserverTypea":{"name":"SubjectObserverType","abstract":"<p>Undocumented</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC12hasObserversSbvp":{"name":"hasObservers","abstract":"<p>Indicates whether the subject has any observers</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Notifies all subscribed observers about next event.</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC10asObserverACyxGyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC7disposeyyF":{"name":"dispose()","abstract":"<p>Unsubscribe all observers and release resources.</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC6create10bufferSizeACyxGSi_tFZ":{"name":"create(bufferSize:)","abstract":"<p>Creates new instance of <code>ReplaySubject</code> that replays at most <code>bufferSize</code> last elements of sequence.</p>","parent_name":"ReplaySubject"},"Classes/ReplaySubject.html#/s:7RxSwift13ReplaySubjectC15createUnboundedACyxGyFZ":{"name":"createUnbounded()","abstract":"<p>Creates a new instance of <code>ReplaySubject</code> that buffers all the elements of a sequence.","parent_name":"ReplaySubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC0D12ObserverTypea":{"name":"SubjectObserverType","abstract":"<p>Undocumented</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC12hasObserversSbvp":{"name":"hasObservers","abstract":"<p>Indicates whether the subject has any observers</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC10isDisposedSbvp":{"name":"isDisposed","abstract":"<p>Indicates whether the subject has been isDisposed.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectCACyxGycfc":{"name":"init()","abstract":"<p>Creates a subject.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Notifies all subscribed observers about next event.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC9subscribeyAA10Disposable_pqd__7ElementQyd__RszAA12ObserverTypeRd__lF":{"name":"subscribe(_:)","abstract":"<p>Subscribes an observer to the subject.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC10asObserverACyxGyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"PublishSubject"},"Classes/PublishSubject.html#/s:7RxSwift14PublishSubjectC7disposeyyF":{"name":"dispose()","abstract":"<p>Unsubscribe all observers and release resources.</p>","parent_name":"PublishSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC0D12ObserverTypea":{"name":"SubjectObserverType","abstract":"<p>Undocumented</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC12hasObserversSbvp":{"name":"hasObservers","abstract":"<p>Indicates whether the subject has any observers</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC10isDisposedSbvp":{"name":"isDisposed","abstract":"<p>Indicates whether the subject has been disposed.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC5valueACyxGx_tcfc":{"name":"init(value:)","abstract":"<p>Initializes a new instance of the subject that caches its last value and starts with the specified value.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC5valuexyKF":{"name":"value()","abstract":"<p>Gets the current value or throws an error.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Notifies all subscribed observers about next event.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC9subscribeyAA10Disposable_pqd__7ElementQyd__RszAA12ObserverTypeRd__lF":{"name":"subscribe(_:)","abstract":"<p>Subscribes an observer to the subject.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC10asObserverACyxGyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"BehaviorSubject"},"Classes/BehaviorSubject.html#/s:7RxSwift15BehaviorSubjectC7disposeyyF":{"name":"dispose()","abstract":"<p>Unsubscribe all observers and release resources.</p>","parent_name":"BehaviorSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC0D12ObserverTypea":{"name":"SubjectObserverType","abstract":"<p>Undocumented</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC12hasObserversSbvp":{"name":"hasObservers","abstract":"<p>Indicates whether the subject has any observers</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectCACyxGycfc":{"name":"init()","abstract":"<p>Creates a subject.</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Notifies all subscribed observers about next event.</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC9subscribeyAA10Disposable_pqd__7ElementQyd__RszAA12ObserverTypeRd__lF":{"name":"subscribe(_:)","abstract":"<p>Subscribes an observer to the subject.</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html#/s:7RxSwift12AsyncSubjectC10asObserverACyxGyF":{"name":"asObserver()","abstract":"<p>Returns observer interface for subject.</p>","parent_name":"AsyncSubject"},"Classes/AsyncSubject.html":{"name":"AsyncSubject","abstract":"<p>An AsyncSubject emits the last value (and only the last value) emitted by the source Observable,"},"Classes/BehaviorSubject.html":{"name":"BehaviorSubject","abstract":"<p>Represents a value that changes over time.</p>"},"Classes/PublishSubject.html":{"name":"PublishSubject","abstract":"<p>Represents an object that is both an observable sequence as well as an observer.</p>"},"Classes/ReplaySubject.html":{"name":"ReplaySubject","abstract":"<p>Represents an object that is both an observable sequence as well as an observer.</p>"},"Protocols/SubjectType.html":{"name":"SubjectType","abstract":"<p>Represents an object that is both an observable sequence as well as an observer.</p>"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC0cD0a":{"name":"VirtualTime","abstract":"<p>Undocumented</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC0cD8Intervala":{"name":"VirtualTimeInterval","abstract":"<p>Undocumented</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC3now10Foundation4DateVvp":{"name":"now","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC5clock0cD4UnitQzvp":{"name":"clock","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC12initialClock9converterACyxG0cD4UnitQz_xtcfc":{"name":"init(initialClock:converter:)","abstract":"<p>Creates a new virtual time scheduler.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC8schedule_6actionAA10Disposable_pqd___AaF_pqd__ctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC16scheduleRelative_03dueD06actionAA10Disposable_pqd___8Dispatch0kD8IntervalOAaG_pqd__ctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC016scheduleRelativeC0_03dueD06actionAA10Disposable_pqd___0cD12IntervalUnitQzAaG_pqd__ctlF":{"name":"scheduleRelativeVirtual(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed after relative time has passed.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC016scheduleAbsoluteC0_4time6actionAA10Disposable_pqd___0cD4UnitQzAaG_pqd__ctlF":{"name":"scheduleAbsoluteVirtual(_:time:action:)","abstract":"<p>Schedules an action to be executed at absolute virtual time.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC015adjustScheduledD0y0cD4UnitQzAFF":{"name":"adjustScheduledTime(_:)","abstract":"<p>Adjusts time of scheduling before adding item to schedule queue.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC5startyyF":{"name":"start()","abstract":"<p>Starts the virtual time scheduler.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC9advanceToyy0cD4UnitQzF":{"name":"advanceTo(_:)","abstract":"<p>Advances the scheduler&rsquo;s clock to the specified time, running all work till that point.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC5sleepyy0cD12IntervalUnitQzF":{"name":"sleep(_:)","abstract":"<p>Advances the scheduler&rsquo;s clock by the specified relative time.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC4stopyyF":{"name":"stop()","abstract":"<p>Stops the virtual time scheduler.</p>","parent_name":"VirtualTimeScheduler"},"Classes/VirtualTimeScheduler.html#/s:7RxSwift20VirtualTimeSchedulerC16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A textual representation of <code>self</code>, suitable for debugging.</p>","parent_name":"VirtualTimeScheduler"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP0cD4UnitQa":{"name":"VirtualTimeUnit","abstract":"<p>Virtual time unit used that represents ticks of virtual clock.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP0cD12IntervalUnitQa":{"name":"VirtualTimeIntervalUnit","abstract":"<p>Virtual time unit used to represent differences of virtual times.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP011convertFromcD0y10Foundation4DateV0cD4UnitQzF":{"name":"convertFromVirtualTime(_:)","abstract":"<p>Converts virtual time to real time.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP09convertTocD0y0cD4UnitQz10Foundation4DateVF":{"name":"convertToVirtualTime(_:)","abstract":"<p>Converts real time to virtual time.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP011convertFromcD8IntervalySd0cdI4UnitQzF":{"name":"convertFromVirtualTimeInterval(_:)","abstract":"<p>Converts from virtual time interval to <code>NSTimeInterval</code>.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP09convertTocD8Intervaly0cdI4UnitQzSdF":{"name":"convertToVirtualTimeInterval(_:)","abstract":"<p>Converts from <code>NSTimeInterval</code> to virtual time interval.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP06offsetcD0_0G00cD4UnitQzAG_0cd8IntervalH0QztF":{"name":"offsetVirtualTime(_:offset:)","abstract":"<p>Offsets virtual time by virtual time interval.</p>","parent_name":"VirtualTimeConverterType"},"Protocols/VirtualTimeConverterType.html#/s:7RxSwift24VirtualTimeConverterTypeP07comparecD0yAA0cD10ComparisonO0cD4UnitQz_AHtF":{"name":"compareVirtualTime(_:_:)","abstract":"<p>This is additional abstraction because <code>Date</code> is unfortunately not comparable.","parent_name":"VirtualTimeConverterType"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC12TimeIntervala":{"name":"TimeInterval","abstract":"<p>Undocumented</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC4Timea":{"name":"Time","abstract":"<p>Undocumented</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC3now10Foundation4DateVvp":{"name":"now","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC08internalcE4Name06serialE13Configuration6leewayACSS_ySo17OS_dispatch_queueCcSg0D00D12TimeIntervalOtcfc":{"name":"init(internalSerialQueueName:serialQueueConfiguration:leeway:)","abstract":"<p>Constructs new <code>SerialDispatchQueueScheduler</code> with internal serial queue named <code>internalSerialQueueName</code>.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC5queue08internalcE4Name6leewayACSo012OS_dispatch_G0C_SS0D00D12TimeIntervalOtcfc":{"name":"init(queue:internalSerialQueueName:leeway:)","abstract":"<p>Constructs new <code>SerialDispatchQueueScheduler</code> named <code>internalSerialQueueName</code> that wraps <code>queue</code>.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC3qos08internalcE4Name6leewayAC0D00D3QoSV_SSAG0D12TimeIntervalOtcfc":{"name":"init(qos:internalSerialQueueName:leeway:)","abstract":"<p>Constructs new <code>SerialDispatchQueueScheduler</code> that wraps one of the global concurrent dispatch queues.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC16scheduleRelative_7dueTime6actionAA10Disposable_px_0D00dJ8IntervalOAaG_pxctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/SerialDispatchQueueScheduler.html#/s:7RxSwift28SerialDispatchQueueSchedulerC16schedulePeriodic_10startAfter6period6actionAA10Disposable_px_0D00D12TimeIntervalOAKxxctlF":{"name":"schedulePeriodic(_:startAfter:period:action:)","abstract":"<p>Schedules a periodic piece of work.</p>","parent_name":"SerialDispatchQueueScheduler"},"Classes/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC09operationD0So011NSOperationD0Cvp":{"name":"operationQueue","abstract":"<p>Undocumented</p>","parent_name":"OperationQueueScheduler"},"Classes/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC13queuePrioritySo011NSOperationdG0Vvp":{"name":"queuePriority","abstract":"<p>Undocumented</p>","parent_name":"OperationQueueScheduler"},"Classes/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC09operationD013queuePriorityACSo011NSOperationD0C_So0idH0Vtcfc":{"name":"init(operationQueue:queuePriority:)","abstract":"<p>Constructs new instance of <code>OperationQueueScheduler</code> that performs work on <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC09operationD0So011NSOperationD0Cvp\">operationQueue</a></code>.</p>","parent_name":"OperationQueueScheduler"},"Classes/OperationQueueScheduler.html#/s:7RxSwift23OperationQueueSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed recursively.</p>","parent_name":"OperationQueueScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerCACycfc":{"name":"init()","abstract":"<p>Initializes new instance of <code>MainScheduler</code>.</p>","parent_name":"MainScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerC8instanceACvpZ":{"name":"instance","abstract":"<p>Singleton instance of <code>MainScheduler</code></p>","parent_name":"MainScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerC13asyncInstanceAA019SerialDispatchQueueD0CvpZ":{"name":"asyncInstance","abstract":"<p>Singleton instance of <code>MainScheduler</code> that always schedules work asynchronously","parent_name":"MainScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerC017ensureExecutingOnD012errorMessageySSSg_tFZ":{"name":"ensureExecutingOnScheduler(errorMessage:)","abstract":"<p>In case this method is called on a background thread it will throw an exception.</p>","parent_name":"MainScheduler"},"Classes/MainScheduler.html#/s:7RxSwift13MainSchedulerC015ensureRunningOnC6Thread12errorMessageySSSg_tFZ":{"name":"ensureRunningOnMainThread(errorMessage:)","abstract":"<p>In case this method is running on a background thread it will throw an exception.</p>","parent_name":"MainScheduler"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV07VirtualE4Unita":{"name":"VirtualTimeUnit","abstract":"<p>Virtual time unit used that represents ticks of virtual clock.</p>","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV07VirtualE12IntervalUnita":{"name":"VirtualTimeIntervalUnit","abstract":"<p>Virtual time unit used to represent differences of virtual times.</p>","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV018convertFromVirtualE0y10Foundation4DateVAGF":{"name":"convertFromVirtualTime(_:)","abstract":"<p>Returns identical value of argument passed because historical virtual time is equal to real time, just","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV016convertToVirtualE0y10Foundation4DateVAGF":{"name":"convertToVirtualTime(_:)","abstract":"<p>Returns identical value of argument passed because historical virtual time is equal to real time, just","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV018convertFromVirtualE8IntervalyS2dF":{"name":"convertFromVirtualTimeInterval(_:)","abstract":"<p>Returns identical value of argument passed because historical virtual time is equal to real time, just","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV016convertToVirtualE8IntervalyS2dF":{"name":"convertToVirtualTimeInterval(_:)","abstract":"<p>Returns identical value of argument passed because historical virtual time is equal to real time, just","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV013offsetVirtualE0_0G010Foundation4DateVAH_SdtF":{"name":"offsetVirtualTime(_:offset:)","abstract":"<p>Offsets <code>Date</code> by time interval.</p>","parent_name":"HistoricalSchedulerTimeConverter"},"Structs/HistoricalSchedulerTimeConverter.html#/s:7RxSwift32HistoricalSchedulerTimeConverterV014compareVirtualE0yAA0hE10ComparisonO10Foundation4DateV_AItF":{"name":"compareVirtualTime(_:_:)","abstract":"<p>Compares two <code>Date</code>s.</p>","parent_name":"HistoricalSchedulerTimeConverter"},"Classes/HistoricalScheduler.html#/s:7RxSwift19HistoricalSchedulerC12initialClockAC10Foundation4DateV_tcfc":{"name":"init(initialClock:)","abstract":"<p>Creates a new historical scheduler with initial clock value.</p>","parent_name":"HistoricalScheduler"},"Classes/CurrentThreadScheduler.html#/s:7RxSwift22CurrentThreadSchedulerC8instanceACvpZ":{"name":"instance","abstract":"<p>The singleton instance of the current thread scheduler.</p>","parent_name":"CurrentThreadScheduler"},"Classes/CurrentThreadScheduler.html#/s:7RxSwift22CurrentThreadSchedulerC18isScheduleRequiredSbvpZ":{"name":"isScheduleRequired","abstract":"<p>Gets a value that indicates whether the caller must call a <code>schedule</code> method.</p>","parent_name":"CurrentThreadScheduler"},"Classes/CurrentThreadScheduler.html#/s:7RxSwift22CurrentThreadSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed as soon as possible on current thread.</p>","parent_name":"CurrentThreadScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC12TimeIntervala":{"name":"TimeInterval","abstract":"<p>Undocumented</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC4Timea":{"name":"Time","abstract":"<p>Undocumented</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC3now10Foundation4DateVvp":{"name":"now","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC8instanceACvpZ":{"name":"instance","abstract":"<p>Singleton instance of <code>ConcurrentMainScheduler</code></p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC16scheduleRelative_7dueTime6actionAA10Disposable_px_8Dispatch0lI8IntervalOAaG_pxctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentMainScheduler.html#/s:7RxSwift23ConcurrentMainSchedulerC16schedulePeriodic_10startAfter6period6actionAA10Disposable_px_8Dispatch0M12TimeIntervalOAKxxctlF":{"name":"schedulePeriodic(_:startAfter:period:action:)","abstract":"<p>Schedules a periodic piece of work.</p>","parent_name":"ConcurrentMainScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC12TimeIntervala":{"name":"TimeInterval","abstract":"<p>Undocumented</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC4Timea":{"name":"Time","abstract":"<p>Undocumented</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift13SchedulerTypeP3now10Foundation4DateVvp":{"name":"now","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC5queue6leewayACSo012OS_dispatch_G0C_0D00D12TimeIntervalOtcfc":{"name":"init(queue:leeway:)","abstract":"<p>Constructs new <code>ConcurrentDispatchQueueScheduler</code> that wraps <code>queue</code>.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC3qos6leewayAC0D00D3QoSV_AF0D12TimeIntervalOtcfc":{"name":"init(qos:leeway:)","abstract":"<p>Convenience init for scheduler that wraps one of the global concurrent dispatch queues.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC8schedule_6actionAA10Disposable_px_AaF_pxctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC16scheduleRelative_7dueTime6actionAA10Disposable_px_0D00dJ8IntervalOAaG_pxctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html#/s:7RxSwift32ConcurrentDispatchQueueSchedulerC16schedulePeriodic_10startAfter6period6actionAA10Disposable_px_0D00D12TimeIntervalOAKxxctlF":{"name":"schedulePeriodic(_:startAfter:period:action:)","abstract":"<p>Schedules a periodic piece of work.</p>","parent_name":"ConcurrentDispatchQueueScheduler"},"Classes/ConcurrentDispatchQueueScheduler.html":{"name":"ConcurrentDispatchQueueScheduler","abstract":"<p>Abstracts the work that needs to be performed on a specific <code>dispatch_queue_t</code>. You can also pass a serial dispatch queue, it shouldn&rsquo;t cause any problems.</p>"},"Classes/ConcurrentMainScheduler.html":{"name":"ConcurrentMainScheduler","abstract":"<p>Abstracts work that needs to be performed on <code>MainThread</code>. In case <code>schedule</code> methods are called from main thread, it will perform action immediately without scheduling.</p>"},"Classes/CurrentThreadScheduler.html":{"name":"CurrentThreadScheduler","abstract":"<p>Represents an object that schedules units of work on the current thread.</p>"},"Classes/HistoricalScheduler.html":{"name":"HistoricalScheduler","abstract":"<p>Provides a virtual time scheduler that uses <code>Date</code> for absolute time and <code>NSTimeInterval</code> for relative time.</p>"},"Structs/HistoricalSchedulerTimeConverter.html":{"name":"HistoricalSchedulerTimeConverter","abstract":"<p>Converts historical virtual time into real time.</p>"},"Classes/MainScheduler.html":{"name":"MainScheduler","abstract":"<p>Abstracts work that needs to be performed on <code>DispatchQueue.main</code>. In case <code>schedule</code> methods are called from <code>DispatchQueue.main</code>, it will perform action immediately without scheduling.</p>"},"Classes/OperationQueueScheduler.html":{"name":"OperationQueueScheduler","abstract":"<p>Abstracts the work that needs to be performed on a specific <code>NSOperationQueue</code>.</p>"},"Classes/SerialDispatchQueueScheduler.html":{"name":"SerialDispatchQueueScheduler","abstract":"<p>Abstracts the work that needs to be performed on a specific <code>dispatch_queue_t</code>. It will make sure"},"Protocols/VirtualTimeConverterType.html":{"name":"VirtualTimeConverterType","abstract":"<p>Parametrization for virtual time used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/VirtualTimeScheduler.html\">VirtualTimeScheduler</a></code>s.</p>"},"Classes/VirtualTimeScheduler.html":{"name":"VirtualTimeScheduler","abstract":"<p>Base class for virtual time schedulers using a priority queue for scheduled items.</p>"},"Classes/SingleAssignmentDisposable.html#/s:7RxSwift26SingleAssignmentDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"SingleAssignmentDisposable"},"Classes/SingleAssignmentDisposable.html#/s:7RxSwift26SingleAssignmentDisposableCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the <code>SingleAssignmentDisposable</code>.</p>","parent_name":"SingleAssignmentDisposable"},"Classes/SingleAssignmentDisposable.html#/s:7RxSwift26SingleAssignmentDisposableC03setE0yyAA0E0_pF":{"name":"setDisposable(_:)","abstract":"<p>Gets or sets the underlying disposable. After disposal, the result of getting this property is undefined.</p>","parent_name":"SingleAssignmentDisposable"},"Classes/SingleAssignmentDisposable.html#/s:7RxSwift26SingleAssignmentDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes the underlying disposable.</p>","parent_name":"SingleAssignmentDisposable"},"Classes/SerialDisposable.html#/s:7RxSwift16SerialDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"SerialDisposable"},"Classes/SerialDisposable.html#/s:7RxSwift16SerialDisposableCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the <code>SerialDisposable</code>.</p>","parent_name":"SerialDisposable"},"Classes/SerialDisposable.html#/s:7RxSwift16SerialDisposableC10disposableAA0D0_pvp":{"name":"disposable","abstract":"<p>Gets or sets the underlying disposable.</p>","parent_name":"SerialDisposable"},"Classes/SerialDisposable.html#/s:7RxSwift16SerialDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes the underlying disposable as well as all future replacements.</p>","parent_name":"SerialDisposable"},"Classes/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC9schedulerAA22ImmediateSchedulerType_pvp":{"name":"scheduler","abstract":"<p>Undocumented</p>","parent_name":"ScheduledDisposable"},"Classes/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"ScheduledDisposable"},"Classes/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC9scheduler10disposableAcA22ImmediateSchedulerType_p_AA0D0_ptcfc":{"name":"init(scheduler:disposable:)","abstract":"<p>Initializes a new instance of the <code>ScheduledDisposable</code> that uses a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC9schedulerAA22ImmediateSchedulerType_pvp\">scheduler</a></code> on which to dispose the <code>disposable</code>.</p>","parent_name":"ScheduledDisposable"},"Classes/ScheduledDisposable.html#/s:7RxSwift19ScheduledDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes the wrapped disposable on the provided scheduler.</p>","parent_name":"ScheduledDisposable"},"Classes/RefCountDisposable.html#/s:7RxSwift18RefCountDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"RefCountDisposable"},"Classes/RefCountDisposable.html#/s:7RxSwift18RefCountDisposableC10disposableAcA0E0_p_tcfc":{"name":"init(disposable:)","abstract":"<p>Initializes a new instance of the <code>RefCountDisposable</code>.</p>","parent_name":"RefCountDisposable"},"Classes/RefCountDisposable.html#/s:7RxSwift18RefCountDisposableC6retainAA0E0_pyF":{"name":"retain()","abstract":"<p>Holds a dependent disposable that when disposed decreases the refcount on the underlying disposable.</p>","parent_name":"RefCountDisposable"},"Classes/RefCountDisposable.html#/s:7RxSwift18RefCountDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes the underlying disposable only when all dependent disposables have been disposed.</p>","parent_name":"RefCountDisposable"},"Classes/DisposeBag/DisposableBuilder.html#/buildBlock(_:)":{"name":"buildBlock(_:)","parent_name":"DisposableBuilder"},"Classes/DisposeBag/DisposableBuilder.html#/s:7RxSwift10DisposeBagC17DisposableBuilderV10buildBlockySayAA0E0_pGAaG_pd_tFZ":{"name":"buildBlock(_:)","abstract":"<p>Undocumented</p>","parent_name":"DisposableBuilder"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagCACycfc":{"name":"init()","abstract":"<p>Constructs new empty dispose bag.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC6insertyyAA10Disposable_pF":{"name":"insert(_:)","abstract":"<p>Adds <code>disposable</code> to be disposed when dispose bag is being deinited.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC9disposingAcA10Disposable_pd_tcfc":{"name":"init(disposing:)","abstract":"<p>Convenience init allows a list of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC7builderACSayAA10Disposable_pGyXE_tcfc":{"name":"init(builder:)","abstract":"<p>Convenience init which utilizes a function builder to let you pass in a list of","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC9disposingACSayAA10Disposable_pG_tcfc":{"name":"init(disposing:)","abstract":"<p>Convenience init allows an array of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC6insertyyAA10Disposable_pd_tF":{"name":"insert(_:)","abstract":"<p>Convenience function allows a list of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC6insert7builderySayAA10Disposable_pGyXE_tF":{"name":"insert(builder:)","abstract":"<p>Convenience function allows a list of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag.html#/s:7RxSwift10DisposeBagC6insertyySayAA10Disposable_pGF":{"name":"insert(_:)","abstract":"<p>Convenience function allows an array of disposables to be gathered for disposal.</p>","parent_name":"DisposeBag"},"Classes/DisposeBag/DisposableBuilder.html":{"name":"DisposableBuilder","parent_name":"DisposeBag"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6create4withAA10Cancelable_pyyc_tFZ":{"name":"create(with:)","abstract":"<p>Constructs a new disposable with the given action used for disposal.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createyAA10Cancelable_pAA10Disposable_p_AaF_ptFZ":{"name":"create(_:_:)","abstract":"<p>Creates a disposable with the given disposables.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createyAA10Cancelable_pAA10Disposable_p_AaF_pAaF_ptFZ":{"name":"create(_:_:_:)","abstract":"<p>Creates a disposable with the given disposables.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createyAA10Cancelable_pAA10Disposable_p_AaF_pAaF_pAaF_pdtFZ":{"name":"create(_:_:_:_:)","abstract":"<p>Creates a disposable with the given disposables.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createyAA10Cancelable_pSayAA10Disposable_pGFZ":{"name":"create(_:)","abstract":"<p>Creates a disposable with the given disposables.</p>","parent_name":"Disposables"},"Structs/Disposables.html#/s:7RxSwift11DisposablesV6createAA10Disposable_pyFZ":{"name":"create()","abstract":"<p>Creates a disposable that does nothing on disposal.</p>","parent_name":"Disposables"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC10DisposeKeyV":{"name":"DisposeKey","abstract":"<p>Key used to remove disposable from composite disposable</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift10CancelableP10isDisposedSbvp":{"name":"isDisposed","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableCyAcA0D0_p_AaD_ptcfc":{"name":"init(_:_:)","abstract":"<p>Initializes a new instance of composite disposable with the specified number of disposables.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableCyAcA0D0_p_AaD_pAaD_ptcfc":{"name":"init(_:_:_:)","abstract":"<p>Initializes a new instance of composite disposable with the specified number of disposables.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableCyAcA0D0_p_AaD_pAaD_pAaD_pAaD_pdtcfc":{"name":"init(_:_:_:_:_:)","abstract":"<p>Initializes a new instance of composite disposable with the specified number of disposables.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC11disposablesACSayAA0D0_pG_tcfc":{"name":"init(disposables:)","abstract":"<p>Initializes a new instance of composite disposable with the specified number of disposables.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC6insertyAC10DisposeKeyVSgAA0D0_pF":{"name":"insert(_:)","abstract":"<p>Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC5countSivp":{"name":"count","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC6remove3foryAC10DisposeKeyV_tF":{"name":"remove(for:)","abstract":"<p>Removes and disposes the disposable identified by <code>disposeKey</code> from the CompositeDisposable.</p>","parent_name":"CompositeDisposable"},"Classes/CompositeDisposable.html#/s:7RxSwift19CompositeDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Disposes all disposables in the group and removes them from the group.</p>","parent_name":"CompositeDisposable"},"Classes/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the <code>BooleanDisposable</code> class</p>","parent_name":"BooleanDisposable"},"Classes/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableC10isDisposedACSb_tcfc":{"name":"init(isDisposed:)","abstract":"<p>Initializes a new instance of the <code>BooleanDisposable</code> class with given value</p>","parent_name":"BooleanDisposable"},"Classes/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableC10isDisposedSbvp":{"name":"isDisposed","parent_name":"BooleanDisposable"},"Classes/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableC7disposeyyF":{"name":"dispose()","abstract":"<p>Sets the status to disposed, which can be observer through the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BooleanDisposable.html#/s:7RxSwift17BooleanDisposableC10isDisposedSbvp\">isDisposed</a></code> property.</p>","parent_name":"BooleanDisposable"},"Classes/BooleanDisposable.html":{"name":"BooleanDisposable","abstract":"<p>Represents a disposable resource that can be checked for disposal status.</p>"},"Classes/CompositeDisposable.html":{"name":"CompositeDisposable","abstract":"<p>Represents a group of disposable resources that are disposed together.</p>"},"Structs/Disposables.html":{"name":"Disposables","abstract":"<p>A collection of utility methods for common disposable operations.</p>"},"Classes/DisposeBag.html":{"name":"DisposeBag","abstract":"<p>Thread safe bag that disposes added disposables on <code>deinit</code>.</p>"},"RxSwift%2FDisposables.html#/s:7RxSwift11DisposeBaseC":{"name":"DisposeBase","abstract":"<p>Base class for all disposables.</p>"},"Classes/RefCountDisposable.html":{"name":"RefCountDisposable","abstract":"<p>Represents a disposable resource that only disposes its underlying disposable resource when all dependent disposable objects have been disposed.</p>"},"Classes/ScheduledDisposable.html":{"name":"ScheduledDisposable","abstract":"<p>Represents a disposable resource whose disposal invocation will be scheduled on the specified scheduler.</p>"},"Classes/SerialDisposable.html":{"name":"SerialDisposable","abstract":"<p>Represents a disposable resource whose underlying disposable resource can be replaced by another disposable resource, causing automatic disposal of the previous underlying disposable resource.</p>"},"Classes/SingleAssignmentDisposable.html":{"name":"SingleAssignmentDisposable","abstract":"<p>Represents a disposable resource which only allows a single assignment of its underlying disposable resource.</p>"},"Protocols/SchedulerType.html#/s:7RxSwift13SchedulerTypeP3now10Foundation4DateVvp":{"name":"now","parent_name":"SchedulerType"},"Protocols/SchedulerType.html#/s:7RxSwift13SchedulerTypeP16scheduleRelative_7dueTime6actionAA10Disposable_pqd___8Dispatch0kH8IntervalOAaG_pqd__ctlF":{"name":"scheduleRelative(_:dueTime:action:)","abstract":"<p>Schedules an action to be executed.</p>","parent_name":"SchedulerType"},"Protocols/SchedulerType.html#/s:7RxSwift13SchedulerTypeP16schedulePeriodic_10startAfter6period6actionAA10Disposable_pqd___8Dispatch0L12TimeIntervalOAKqd__qd__ctlF":{"name":"schedulePeriodic(_:startAfter:period:action:)","abstract":"<p>Schedules a periodic piece of work.</p>","parent_name":"SchedulerType"},"Structs/Reactive.html#/s:7RxSwift8ReactiveV4basexvp":{"name":"base","abstract":"<p>Base object to extend.</p>","parent_name":"Reactive"},"Structs/Reactive.html#/s:7RxSwift8ReactiveVyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Creates extensions with base object.</p>","parent_name":"Reactive"},"Structs/Reactive.html#/s:7RxSwift8ReactiveV13dynamicMemberAA6BinderVyqd__Gs24ReferenceWritableKeyPathCyxqd__G_tcRlzCluip":{"name":"subscript(dynamicMember:)","abstract":"<p>Automatically synthesized binder for a key path between the reactive","parent_name":"Reactive"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypeP7ElementQa":{"name":"Element","abstract":"<p>The type of elements in sequence that observer can observe.</p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypeP2onyyAA5EventOy7ElementQzGF":{"name":"on(_:)","abstract":"<p>Notify observer about sequence event.</p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE02asC0AA03AnyC0Vy7ElementQzGyF":{"name":"asObserver()","abstract":"<p>Erases type of observer and returns canonical observer.</p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE03mapC0yAA03AnyC0Vyqd__G7ElementQzqd__KclF":{"name":"mapObserver(_:)","abstract":"<p>Transforms observer of type R to type E using custom transform method.","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE6onNextyy7ElementQzF":{"name":"onNext(_:)","abstract":"<p>Convenience method equivalent to <code>on(.next(element: Element))</code></p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE11onCompletedyyF":{"name":"onCompleted()","abstract":"<p>Convenience method equivalent to <code>on(.completed)</code></p>","parent_name":"ObserverType"},"Protocols/ObserverType.html#/s:7RxSwift12ObserverTypePAAE7onErroryys0F0_pF":{"name":"onError(_:)","abstract":"<p>Convenience method equivalent to <code>on(.error(Swift.Error))</code></p>","parent_name":"ObserverType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypeP9subscribeyAA10Disposable_pqd__AA08ObserverD0Rd__7ElementQyd__AGRtzlF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9subscribe4with6onNext0G5Error0G9Completed0G8DisposedAA10Disposable_pqd___yqd___7ElementQztcSgyqd___s0I0_ptcSgyqd__cSgAPtRld__ClF":{"name":"subscribe(with:onNext:onError:onCompleted:onDisposed:)","abstract":"<p>Subscribes an element handler, an error handler, a completion handler and disposed handler to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9subscribe6onNext0F5Error0F9Completed0F8DisposedAA10Disposable_py7ElementQzcSg_ys0H0_pcSgyycSgAOtF":{"name":"subscribe(onNext:onError:onCompleted:onDisposed:)","abstract":"<p>Subscribes an element handler, an error handler, a completion handler and disposed handler to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE02asC0AA0C0Cy7ElementQzGyF":{"name":"asObservable()","abstract":"<p>Default implementation of converting <code>ObservableType</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3ambyAA0C0Cy7ElementQzGqd__STRd__AiGRtd__lFZ":{"name":"amb(_:)","abstract":"<p>Propagates the observable sequence that reacts first.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3ambyAA0C0Cy7ElementQzGqd__AaBRd__AGQyd__AHRSlF":{"name":"amb(_:)","abstract":"<p>Propagates the observable sequence that reacts first.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6buffer8timeSpan5count9schedulerAA0C0CySay7ElementQzGG8Dispatch0K12TimeIntervalO_SiAA09SchedulerD0_ptF":{"name":"buffer(timeSpan:count:scheduler:)","abstract":"<p>Projects each element of an observable sequence into a buffer that&rsquo;s sent out when either it&rsquo;s full or a given amount of time has elapsed, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5catchyAA0C0Cy7ElementQzGAIs5Error_pKcF":{"name":"catch(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the observable sequence produced by the handler.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE10catchErroryAA0C0Cy7ElementQzGAIs0F0_pKcF":{"name":"catchError(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the observable sequence produced by the handler.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14catchAndReturnyAA0C0Cy7ElementQzGAHF":{"name":"catchAndReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20catchErrorJustReturnyAA0C0Cy7ElementQzGAHF":{"name":"catchErrorJustReturn(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with a single element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE10catchErroryAA0C0Cy7ElementQzGqd__STRd__AiGRtd__lFZ":{"name":"catchError(_:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the next observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5catch8sequenceAA0C0Cy7ElementQzGqd___tSTRd__AjHRtd__lFZ":{"name":"catch(sequence:)","abstract":"<p>Continues an observable sequence that is terminated by an error with the next observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5retryAA0C0Cy7ElementQzGyF":{"name":"retry()","abstract":"<p>Repeats the source observable sequence until it successfully terminates.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5retryyAA0C0Cy7ElementQzGSiF":{"name":"retry(_:)","abstract":"<p>Repeats the source observable sequence the specified number of times in case of an error or until it successfully terminates.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest_14resultSelectorAA0C0Cy7ElementQzGqd___AISayAH_AHQYd__GKctSlRd__AabHRpd__lFZ":{"name":"combineLatest(_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatestyAA0C0CySay7ElementQzGGqd__SlRd__AG_AGQYd__AHRSAabGRpd__lFZ":{"name":"combineLatest(_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest__14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_AiHQyd___AHQyd_0_tKctAaBRd__AaBRd_0_r0_lFZ":{"name":"combineLatest(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest___14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_AiHQyd___AHQyd_0_AHQyd_1_tKctAaBRd__AaBRd_0_AaBRd_1_r1_lFZ":{"name":"combineLatest(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest____14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lFZ":{"name":"combineLatest(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest_____14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_qd_3_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lFZ":{"name":"combineLatest(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest______14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lFZ":{"name":"combineLatest(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest_______14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_AHQyd_5_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13combineLatest________14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_AHQyd_5_AHQyd_6_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_AaBRd_6_r6_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE10compactMapyAA0C0Cyqd__Gqd__Sg7ElementQzKclF":{"name":"compactMap(_:)","abstract":"<p>Projects each element of an observable sequence into an optional form and filters all optional results.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy7ElementQzGqd__AA0c11ConvertibleD0Rd__AGQyd__AHRSlF":{"name":"concat(_:)","abstract":"<p>Concatenates the second observable sequence to <code>self</code> upon successful termination of <code>self</code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy7ElementQzGqd__STRd__AiGRtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy7ElementQzGqd__SlRd__AiGRtd__lFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given collection, as long as the previous observable sequence terminated successfully.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy7ElementQzGAId_tFZ":{"name":"concat(_:)","abstract":"<p>Concatenates all observable sequences in the given collection, as long as the previous observable sequence terminated successfully.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6createyAA0C0Cy7ElementQzGAA10Disposable_pAA11AnyObserverVyAHGcFZ":{"name":"create(_:)","abstract":"<p>Creates an observable sequence from a specified subscribe method implementation.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8debounce_9schedulerAA0C0Cy7ElementQzG8Dispatch0H12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"debounce(_:scheduler:)","abstract":"<p>Ignores elements from an observable sequence which are followed by another element within a specified relative time duration, using the specified scheduler to run throttling timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5debug_10trimOutput4file4line8functionAA0C0Cy7ElementQzGSSSg_SbSSSuSStF":{"name":"debug(_:trimOutput:file:line:function:)","abstract":"<p>Prints received events for all observers on standard output.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7ifEmpty7defaultAA0C0Cy7ElementQzGAI_tF":{"name":"ifEmpty(default:)","abstract":"<p>Emits elements from the source observable sequence, or a default element if the source observable sequence is empty.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8deferredyAA0C0Cy7ElementQzGAIyKcFZ":{"name":"deferred(_:)","abstract":"<p>Returns an observable sequence that invokes the specified factory function whenever a new observer subscribes.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5delay_9schedulerAA0C0Cy7ElementQzG8Dispatch0H12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"delay(_:scheduler:)","abstract":"<p>Returns an observable sequence by the source observable sequence shifted forward in time by a specified delay. Error events from the source observable sequence are not delayed.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE17delaySubscription_9schedulerAA0C0Cy7ElementQzG8Dispatch0I12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"delaySubscription(_:scheduler:)","abstract":"<p>Time shifts the observable sequence by delaying the subscription with the specified relative time duration, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20distinctUntilChangedyAA0C0Cy7ElementQzGqd__AHKcSQRd__lF":{"name":"distinctUntilChanged(_:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the <code>keySelector</code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20distinctUntilChangedyAA0C0Cy7ElementQzGSbAH_AHtKcF":{"name":"distinctUntilChanged(_:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the <code>comparer</code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20distinctUntilChanged_8comparerAA0C0Cy7ElementQzGqd__AIKc_Sbqd___qd__tKctlF":{"name":"distinctUntilChanged(_:comparer:)","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to the keySelector and the comparer.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE20distinctUntilChanged2atAA0C0Cy7ElementQzGs7KeyPathCyAIqd__G_tSQRd__lF":{"name":"distinctUntilChanged(at:)","abstract":"<p>Returns an observable sequence that contains only contiguous elements with distinct values in the provided key path on each object.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE2do6onNext05afterG00F5Error0hI00F9Completed0hJ00F9Subscribe0F10Subscribed0F7DisposeAA0C0Cy7ElementQzGyAQKcSg_ASys0I0_pKcSgAUyyKcSgAVyycSgA2WtF":{"name":"do(onNext:afterNext:onError:afterError:onCompleted:afterCompleted:onSubscribe:onSubscribed:onDispose:)","abstract":"<p>Invokes an action for each event in the observable sequence, and propagates all observer messages through the result sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9elementAtyAA0C0Cy7ElementQzGSiF":{"name":"elementAt(_:)","abstract":"<p>Returns a sequence emitting only element <em>n</em> emitted by an Observable</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7element2atAA0C0Cy7ElementQzGSi_tF":{"name":"element(at:)","abstract":"<p>Returns a sequence emitting only element <em>n</em> emitted by an Observable</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5emptyAA0C0Cy7ElementQzGyFZ":{"name":"empty()","abstract":"<p>Returns an empty observable sequence, using the specified scheduler to send out the single <code>Completed</code> message.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE10enumeratedAA0C0CySi5index_7ElementQz7elementtGyF":{"name":"enumerated()","abstract":"<p>Enumerates the elements of an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5erroryAA0C0Cy7ElementQzGs5Error_pFZ":{"name":"error(_:)","abstract":"<p>Returns an observable sequence that terminates with an <code>error</code>.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6filteryAA0C0Cy7ElementQzGSbAHKcF":{"name":"filter(_:)","abstract":"<p>Filters the elements of an observable sequence based on a predicate.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14ignoreElementsAA0C0Cys5NeverOGyF":{"name":"ignoreElements()","abstract":"<p>Skips elements and completes (or errors) when the observable sequence completes (or errors). Equivalent to filter that always returns false.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8generate12initialState9condition9scheduler7iterateAA0C0Cy7ElementQzGAL_SbALKcAA018ImmediateSchedulerD0_pA2LKctFZ":{"name":"generate(initialState:condition:scheduler:iterate:)","abstract":"<p>Generates an observable sequence by running a state-driven loop producing the sequence&rsquo;s elements, using the specified scheduler","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7groupBy11keySelectorAA0C0CyAA07GroupedC0Vyqd__7ElementQzGGqd__AKKc_tSHRd__lF":{"name":"groupBy(keySelector:)","abstract":"<p>Undocumented</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4justyAA0C0Cy7ElementQzGAHFZ":{"name":"just(_:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4just_9schedulerAA0C0Cy7ElementQzGAI_AA018ImmediateSchedulerD0_ptFZ":{"name":"just(_:scheduler:)","abstract":"<p>Returns an observable sequence that contains a single element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3mapyAA0C0Cyqd__Gqd__7ElementQzKclF":{"name":"map(_:)","abstract":"<p>Projects each element of an observable sequence into a new form.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE11materializeAA0C0CyAA5EventOy7ElementQzGGyF":{"name":"materialize()","abstract":"<p>Convert any Observable into an Observable of its events.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7flatMapyAA0C0Cy7ElementQyd__Gqd__AGQzKcAA0c11ConvertibleD0Rd__lF":{"name":"flatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE12flatMapFirstyAA0C0Cy7ElementQyd__Gqd__AGQzKcAA0c11ConvertibleD0Rd__lF":{"name":"flatMapFirst(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5mergeyAA0C0Cy7ElementQzGqd__SlRd__AiGRtd__lFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences from collection into a single observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5mergeyAA0C0Cy7ElementQzGSayAIGFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences from array into a single observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5mergeyAA0C0Cy7ElementQzGAId_tFZ":{"name":"merge(_:)","abstract":"<p>Merges elements from all observable sequences into a single observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9concatMapyAA0C0Cy7ElementQyd__Gqd__AGQzKcAA0c11ConvertibleD0Rd__lF":{"name":"concatMap(_:)","abstract":"<p>Projects each element of an observable sequence to an observable sequence and concatenates the resulting observable sequences into one observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9multicast_8selectorAA0C0Cyqd_0_Gqd__yKc_AhGy7ElementQyd__GKctAA07SubjectD0Rd__8Observer_AIQYd__AIRtzr0_lF":{"name":"multicast(_:selector:)","abstract":"<p>Multicasts the source sequence notifications through an instantiated subject into all uses of the sequence within a selector function.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7publishAA011ConnectableC0Cy7ElementQzGyF":{"name":"publish()","abstract":"<p>Returns a connectable observable sequence that shares a single subscription to the underlying sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6replayyAA011ConnectableC0Cy7ElementQzGSiF":{"name":"replay(_:)","abstract":"<p>Returns a connectable observable sequence that shares a single subscription to the underlying sequence replaying bufferSize elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9replayAllAA011ConnectableC0Cy7ElementQzGyF":{"name":"replayAll()","abstract":"<p>Returns a connectable observable sequence that shares a single subscription to the underlying sequence replaying all elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9multicastyAA011ConnectableC0Cy7ElementQyd__Gqd__AA07SubjectD0Rd__8Observer_AGQYd__AGRtzlF":{"name":"multicast(_:)","abstract":"<p>Multicasts the source sequence notifications through the specified subject to the resulting connectable observable.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9multicast11makeSubjectAA011ConnectableC0Cy7ElementQyd__Gqd__yc_tAA0gD0Rd__8Observer_AHQYd__AHRtzlF":{"name":"multicast(makeSubject:)","abstract":"<p>Multicasts the source sequence notifications through an instantiated subject to the resulting connectable observable.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5neverAA0C0Cy7ElementQzGyFZ":{"name":"never()","abstract":"<p>Returns a non-terminating observable sequence, which can be used to denote an infinite duration.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7observe2onAA0C0Cy7ElementQzGAA018ImmediateSchedulerD0_p_tF":{"name":"observe(on:)","abstract":"<p>Wraps the source sequence in order to run its observer callbacks on the specified scheduler.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9observeOnyAA0C0Cy7ElementQzGAA018ImmediateSchedulerD0_pF":{"name":"observeOn(_:)","abstract":"<p>Wraps the source sequence in order to run its observer callbacks on the specified scheduler.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4from8optionalAA0C0Cy7ElementQzGAISg_tFZ":{"name":"from(optional:)","abstract":"<p>Converts a optional to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4from8optional9schedulerAA0C0Cy7ElementQzGAJSg_AA018ImmediateSchedulerD0_ptFZ":{"name":"from(optional:scheduler:)","abstract":"<p>Converts a optional to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6reduce_11accumulator9mapResultAA0C0Cyqd_0_Gqd___qd__qd___7ElementQztKcqd_0_qd__Kctr0_lF":{"name":"reduce(_:accumulator:mapResult:)","abstract":"<p>Applies an <code>accumulator</code> function over an observable sequence, returning the result of the aggregation as a single element in the result sequence. The specified <code>seed</code> value is used as the initial accumulator value.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6reduce_11accumulatorAA0C0Cyqd__Gqd___qd__qd___7ElementQztKctlF":{"name":"reduce(_:accumulator:)","abstract":"<p>Applies an <code>accumulator</code> function over an observable sequence, returning the result of the aggregation as a single element in the result sequence. The specified <code>seed</code> value is used as the initial accumulator value.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13repeatElement_9schedulerAA0C0Cy0F0QzGAI_AA018ImmediateSchedulerD0_ptFZ":{"name":"repeatElement(_:scheduler:)","abstract":"<p>Generates an observable sequence that repeats the given element infinitely, using the specified scheduler to send out observer messages.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5retry4whenAA0C0Cy7ElementQzGqd__AGyqd_0_Gc_tAaBRd__s5ErrorRd_0_r0_lF":{"name":"retry(when:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9retryWhenyAA0C0Cy7ElementQzGqd__AFyqd_0_GcAaBRd__s5ErrorRd_0_r0_lF":{"name":"retryWhen(_:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5retry4whenAA0C0Cy7ElementQzGqd__AGys5Error_pGc_tAaBRd__lF":{"name":"retry(when:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9retryWhenyAA0C0Cy7ElementQzGqd__AFys5Error_pGcAaBRd__lF":{"name":"retryWhen(_:)","abstract":"<p>Repeats the source observable sequence on error when the notifier emits a next value.","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6sample_12defaultValueAA0C0Cy7ElementQzGqd___AISgtAaBRd__lF":{"name":"sample(_:defaultValue:)","abstract":"<p>Samples the source observable sequence using a sampler observable sequence producing sampling ticks.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4scan4into11accumulatorAA0C0Cyqd__Gqd___yqd__z_7ElementQztKctlF":{"name":"scan(into:accumulator:)","abstract":"<p>Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4scan_11accumulatorAA0C0Cyqd__Gqd___qd__qd___7ElementQztKctlF":{"name":"scan(_:accumulator:)","abstract":"<p>Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE2of_9schedulerAA0C0Cy7ElementQzGAId_AA018ImmediateSchedulerD0_ptFZ":{"name":"of(_:scheduler:)","abstract":"<p>This method creates a new Observable instance with a variable number of elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4from_9schedulerAA0C0Cy7ElementQzGSayAIG_AA018ImmediateSchedulerD0_ptFZ":{"name":"from(_:scheduler:)","abstract":"<p>Converts an array to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4from_9schedulerAA0C0Cy7ElementQzGqd___AA018ImmediateSchedulerD0_ptSTRd__AHQyd__AIRSlFZ":{"name":"from(_:scheduler:)","abstract":"<p>Converts a sequence to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5share6replay5scopeAA0C0Cy7ElementQzGSi_AA20SubjectLifetimeScopeOtF":{"name":"share(replay:scope:)","abstract":"<p>Returns an observable sequence that <strong>shares a single subscription to the underlying sequence</strong>, and immediately upon subscription replays  elements in buffer.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6singleAA0C0Cy7ElementQzGyF":{"name":"single()","abstract":"<p>The single operator is similar to first, but throws a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO10noElementsyA2CmF\">RxError.noElements</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO18moreThanOneElementyA2CmF\">RxError.moreThanOneElement</a></code>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6singleyAA0C0Cy7ElementQzGSbAHKcF":{"name":"single(_:)","abstract":"<p>The single operator is similar to first, but throws a <code>RxError.NoElements</code> or <code>RxError.MoreThanOneElement</code>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4skipyAA0C0Cy7ElementQzGSiF":{"name":"skip(_:)","abstract":"<p>Bypasses a specified number of elements in an observable sequence and then returns the remaining elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4skip_9schedulerAA0C0Cy7ElementQzG8Dispatch0H12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"skip(_:scheduler:)","abstract":"<p>Skips elements for the specified duration from the start of the observable source sequence, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4skip5untilAA0C0Cy7ElementQzGqd___tAaBRd__lF":{"name":"skip(until:)","abstract":"<p>Returns the elements from the source observable sequence that are emitted after the other observable sequence produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9skipUntilyAA0C0Cy7ElementQzGqd__AaBRd__lF":{"name":"skipUntil(_:)","abstract":"<p>Returns the elements from the source observable sequence that are emitted after the other observable sequence produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4skip5whileAA0C0Cy7ElementQzGSbAIKc_tF":{"name":"skip(while:)","abstract":"<p>Bypasses elements in an observable sequence as long as a specified condition is true and then returns the remaining elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9skipWhileyAA0C0Cy7ElementQzGSbAHKcF":{"name":"skipWhile(_:)","abstract":"<p>Bypasses elements in an observable sequence as long as a specified condition is true and then returns the remaining elements.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9startWithyAA0C0Cy7ElementQzGAHd_tF":{"name":"startWith(_:)","abstract":"<p>Prepends a sequence of values to an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9subscribe2onAA0C0Cy7ElementQzGAA018ImmediateSchedulerD0_p_tF":{"name":"subscribe(on:)","abstract":"<p>Wraps the source sequence in order to run its subscription and unsubscription logic on the specified","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE11subscribeOnyAA0C0Cy7ElementQzGAA018ImmediateSchedulerD0_pF":{"name":"subscribeOn(_:)","abstract":"<p>Wraps the source sequence in order to run its subscription and unsubscription logic on the specified","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13flatMapLatestyAA0C0Cy7ElementQyd__Gqd__AGQzKcAA0c11ConvertibleD0Rd__lF":{"name":"flatMapLatest(_:)","abstract":"<p>Projects each element of an observable sequence into a new sequence of observable sequences and then","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE13flatMapLatestyAA10InfallibleVy7ElementQyd__Gqd__AGQzKcAA0hD0Rd__lF":{"name":"flatMapLatest(_:)","abstract":"<p>Projects each element of an observable sequence into a new sequence of observable sequences and then","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7ifEmpty8switchToAA0C0Cy7ElementQzGAJ_tF":{"name":"ifEmpty(switchTo:)","abstract":"<p>Returns the elements of the specified sequence or <code>switchTo</code> sequence if the sequence is empty.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4takeyAA0C0Cy7ElementQzGSiF":{"name":"take(_:)","abstract":"<p>Returns a specified number of contiguous elements from the start of an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4take3for9schedulerAA0C0Cy7ElementQzG8Dispatch0I12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"take(for:scheduler:)","abstract":"<p>Takes elements for the specified duration from the start of the observable source sequence, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4take_9schedulerAA0C0Cy7ElementQzG8Dispatch0H12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"take(_:scheduler:)","abstract":"<p>Takes elements for the specified duration from the start of the observable source sequence, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8takeLastyAA0C0Cy7ElementQzGSiF":{"name":"takeLast(_:)","abstract":"<p>Returns a specified number of contiguous elements from the end of an observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4take5untilAA0C0Cy7ElementQzGqd___tAaBRd__lF":{"name":"take(until:)","abstract":"<p>Returns the elements from the source observable sequence until the other observable sequence produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4take5until8behaviorAA0C0Cy7ElementQzGSbAJKc_AA12TakeBehaviorOtF":{"name":"take(until:behavior:)","abstract":"<p>Returns elements from an observable sequence until the specified condition is true.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE4take5while8behaviorAA0C0Cy7ElementQzGSbAJKc_AA12TakeBehaviorOtF":{"name":"take(while:behavior:)","abstract":"<p>Returns elements from an observable sequence as long as a specified condition is true.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9takeUntilyAA0C0Cy7ElementQzGqd__AaBRd__lF":{"name":"takeUntil(_:)","abstract":"<p>Returns the elements from the source observable sequence until the other observable sequence produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9takeUntil_9predicateAA0C0Cy7ElementQzGAA12TakeBehaviorO_SbAIKctF":{"name":"takeUntil(_:predicate:)","abstract":"<p>Returns elements from an observable sequence until the specified condition is true.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE9takeWhileyAA0C0Cy7ElementQzGSbAHKcF":{"name":"takeWhile(_:)","abstract":"<p>Returns elements from an observable sequence as long as a specified condition is true.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8throttle_6latest9schedulerAA0C0Cy7ElementQzG8Dispatch0I12TimeIntervalO_SbAA09SchedulerD0_ptF":{"name":"throttle(_:latest:scheduler:)","abstract":"<p>Returns an Observable that emits the first and the latest item emitted by the source Observable during sequential time windows of a specified duration.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7timeout_9schedulerAA0C0Cy7ElementQzG8Dispatch0H12TimeIntervalO_AA09SchedulerD0_ptF":{"name":"timeout(_:scheduler:)","abstract":"<p>Applies a timeout policy for each element in the observable sequence. If the next element isn&rsquo;t received within the specified timeout duration starting from its predecessor, a TimeoutError is propagated to the observer.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7timeout_5other9schedulerAA0C0Cy7ElementQzG8Dispatch0I12TimeIntervalO_qd__AA09SchedulerD0_ptAA0c11ConvertibleD0Rd__AIQyd__AJRSlF":{"name":"timeout(_:other:scheduler:)","abstract":"<p>Applies a timeout policy for each element in the observable sequence, using the specified scheduler to run timeout timers. If the next element isn&rsquo;t received within the specified timeout duration starting from its predecessor, the other observable sequence is used to produce future messages from that point on.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7toArrayAA17PrimitiveSequenceVyAA11SingleTraitOSay7ElementQzGGyF":{"name":"toArray()","abstract":"<p>Converts an Observable into a Single that emits the whole sequence as a single array and then terminates.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5using_17observableFactoryAA0C0Cy7ElementQzGqd__yKc_AJqd__KctAA10DisposableRd__lFZ":{"name":"using(_:observableFactory:)","abstract":"<p>Constructs an observable sequence that depends on a resource object, whose lifetime is tied to the resulting observable sequence&rsquo;s lifetime.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE6window8timeSpan5count9schedulerAA0C0CyAIy7ElementQzGG8Dispatch0K12TimeIntervalO_SiAA09SchedulerD0_ptF":{"name":"window(timeSpan:count:scheduler:)","abstract":"<p>Projects each element of an observable sequence into a window that is completed when either it’s full or a given amount of time has elapsed.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14withLatestFrom_14resultSelectorAA0C0Cyqd_0_Gqd___qd_0_7ElementQz_AIQyd__tKctAA0c11ConvertibleD0Rd__r0_lF":{"name":"withLatestFrom(_:resultSelector:)","abstract":"<p>Merges two observable sequences into one observable sequence by combining each element from self with the latest element from the second source, if any.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14withLatestFromyAA0C0Cy7ElementQyd__Gqd__AA0c11ConvertibleD0Rd__lF":{"name":"withLatestFrom(_:)","abstract":"<p>Merges two observable sequences into one observable sequence by using latest element from the second sequence every time when <code>self</code> emits an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14withUnretained_14resultSelectorAA0C0Cyqd_0_Gqd___qd_0_qd___7ElementQztctRld__Cr0_lF":{"name":"withUnretained(_:resultSelector:)","abstract":"<p>Provides an unretained, safe to use (i.e. not implicitly unwrapped), reference to an object along with the events emitted by the sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE14withUnretainedyAA0C0Cyqd___7ElementQztGqd__Rld__ClF":{"name":"withUnretained(_:)","abstract":"<p>Provides an unretained, safe to use (i.e. not implicitly unwrapped), reference to an object along with the events emitted by the sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip_14resultSelectorAA0C0Cy7ElementQzGqd___AISayAH_AHQYd__GKctSlRd__AabHRpd__lFZ":{"name":"zip(_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zipyAA0C0CySay7ElementQzGGqd__SlRd__AG_AGQYd__AHRSAabGRpd__lFZ":{"name":"zip(_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip__14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_AiHQyd___AHQyd_0_tKctAaBRd__AaBRd_0_r0_lFZ":{"name":"zip(_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip___14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_AiHQyd___AHQyd_0_AHQyd_1_tKctAaBRd__AaBRd_0_AaBRd_1_r1_lFZ":{"name":"zip(_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip____14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lFZ":{"name":"zip(_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip_____14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_qd_3_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lFZ":{"name":"zip(_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip______14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lFZ":{"name":"zip(_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip_______14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_AHQyd_5_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lFZ":{"name":"zip(_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE3zip________14resultSelectorAA0C0Cy7ElementQzGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_AiHQyd___AHQyd_0_AHQyd_1_AHQyd_2_AHQyd_3_AHQyd_4_AHQyd_5_AHQyd_6_tKctAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_AaBRd_6_r6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:resultSelector:)","abstract":"<p>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE8asSingleAA17PrimitiveSequenceVyAA0F5TraitO7ElementQzGyF":{"name":"asSingle()","abstract":"<p>The <code>asSingle</code> operator throws a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO10noElementsyA2CmF\">RxError.noElements</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO18moreThanOneElementyA2CmF\">RxError.moreThanOneElement</a></code>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE5firstAA17PrimitiveSequenceVyAA11SingleTraitO7ElementQzSgGyF":{"name":"first()","abstract":"<p>The <code>first</code> operator emits only the very first item emitted by this Observable,","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAE7asMaybeAA17PrimitiveSequenceVyAA0F5TraitO7ElementQzGyF":{"name":"asMaybe()","abstract":"<p>The <code>asMaybe</code> operator throws a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RxError.html#/s:7RxSwift0A5ErrorO18moreThanOneElementyA2CmF\">RxError.moreThanOneElement</a></code>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_tGqd___qd_0_tAaBRd__AaBRd_0_r0_lFZ":{"name":"combineLatest(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_tGqd___qd_0_qd_1_tAaBRd__AaBRd_0_AaBRd_1_r1_lFZ":{"name":"combineLatest(_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_tGqd___qd_0_qd_1_qd_2_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lFZ":{"name":"combineLatest(_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_tGqd___qd_0_qd_1_qd_2_qd_3_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lFZ":{"name":"combineLatest(_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lFZ":{"name":"combineLatest(_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_ADQyd_5_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE13combineLatestyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_ADQyd_5_ADQyd_6_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_AaBRd_6_r6_lFZ":{"name":"combineLatest(_:_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever any of the observable sequences produces an element.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAA10Foundation4DataV7ElementRtzrlE6decode4type7decoderAA0C0Cyqd__Gqd__m_qd_0_tSeRd__AA0F7DecoderRd_0_r0_lF":{"name":"decode(type:decoder:)","abstract":"<p>Attempt to decode the emitted <code>Data</code> using a provided decoder.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A16EventConvertible7ElementRpzrlE13dematerializeAA0C0CyAE_AEQZGyF":{"name":"dematerialize()","abstract":"<p>Convert any previously materialized Observable into it&rsquo;s original form.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAASQ7ElementRpzrlE20distinctUntilChangedAA0C0CyAEGyF":{"name":"distinctUntilChanged()","abstract":"<p>Returns an observable sequence that contains only distinct contiguous elements according to equality operator.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A0c11ConvertibleD07ElementRpzrlE5mergeAA0C0CyAE_AEQZGyF":{"name":"merge()","abstract":"<p>Merges elements from all observable sequences in the given enumerable sequence into a single observable sequence.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A0c11ConvertibleD07ElementRpzrlE5merge13maxConcurrentAA0C0CyAE_AEQZGSi_tF":{"name":"merge(maxConcurrent:)","abstract":"<p>Merges elements from all inner observable sequences into a single observable sequence, limiting the number of concurrent subscriptions to inner sequences.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A0c11ConvertibleD07ElementRpzrlE6concatAA0C0CyAE_AEQZGyF":{"name":"concat()","abstract":"<p>Concatenates all inner observable sequences, as long as the previous observable sequence terminated successfully.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAs17FixedWidthInteger7ElementRpzrlE5range5start5count9schedulerAA0C0CyAFGAF_AfA018ImmediateSchedulerD0_ptFZ":{"name":"range(start:count:scheduler:)","abstract":"<p>Generates an observable sequence of integral numbers within a specified range, using the specified scheduler to generate and send out observer messages.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePA2A0c11ConvertibleD07ElementRpzrlE12switchLatestAA0C0CyAE_AEQZGyF":{"name":"switchLatest()","abstract":"<p>Transforms an observable sequence of observable sequences into an observable sequence","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAs17FixedWidthInteger7ElementRpzrlE8interval_9schedulerAA0C0CyAFG8Dispatch0K12TimeIntervalO_AA09SchedulerD0_ptFZ":{"name":"interval(_:scheduler:)","abstract":"<p>Returns an observable sequence that produces a value after each period, using the specified scheduler to run timers and to send out observer messages.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAs17FixedWidthInteger7ElementRpzrlE5timer_6period9schedulerAA0C0CyAFG8Dispatch0L12TimeIntervalO_AOSgAA09SchedulerD0_ptFZ":{"name":"timer(_:period:scheduler:)","abstract":"<p>Returns an observable sequence that periodically produces a value after the specified initial relative due time has elapsed, using the specified scheduler to run timers.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE3zipyAA0C0CyADQyd___ADQyd_0_tGqd___qd_0_tAaBRd__AaBRd_0_r0_lFZ":{"name":"zip(_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_tGqd___qd_0_qd_1_tAaBRd__AaBRd_0_AaBRd_1_r1_lFZ":{"name":"zip(_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_tGqd___qd_0_qd_1_qd_2_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_r2_lFZ":{"name":"zip(_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_tGqd___qd_0_qd_1_qd_2_qd_3_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_r3_lFZ":{"name":"zip(_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_r4_lFZ":{"name":"zip(_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_ADQyd_5_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_r5_lFZ":{"name":"zip(_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAyp7ElementRtzrlE3zipyAA0C0CyADQyd___ADQyd_0_ADQyd_1_ADQyd_2_ADQyd_3_ADQyd_4_ADQyd_5_ADQyd_6_tGqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_qd_6_tAaBRd__AaBRd_0_AaBRd_1_AaBRd_2_AaBRd_3_AaBRd_4_AaBRd_5_AaBRd_6_r6_lFZ":{"name":"zip(_:_:_:_:_:_:_:_:)","abstract":"<p>Merges the specified observable sequences into one observable sequence of tuples whenever all of the observable sequences have produced an element at a corresponding index.</p>","parent_name":"ObservableType"},"Protocols/ObservableType.html#/s:7RxSwift14ObservableTypePAAs5NeverO7ElementRtzrlE13asCompletableAA17PrimitiveSequenceVyAA0H5TraitOAEGyF":{"name":"asCompletable()","parent_name":"ObservableType"},"Protocols/ObservableConvertibleType.html#/s:7RxSwift25ObservableConvertibleTypeP7ElementQa":{"name":"Element","abstract":"<p>Type of elements in sequence.</p>","parent_name":"ObservableConvertibleType"},"Protocols/ObservableConvertibleType.html#/s:7RxSwift25ObservableConvertibleTypeP02asC0AA0C0Cy7ElementQzGyF":{"name":"asObservable()","abstract":"<p>Converts <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> sequence.</p>","parent_name":"ObservableConvertibleType"},"Protocols/ObservableConvertibleType.html#/s:7RxSwift25ObservableConvertibleTypePAAE6valuesScsy7ElementQzs5Error_pGvp":{"name":"values","abstract":"<p>Allows iterating over the values of an Observable","parent_name":"ObservableConvertibleType"},"Protocols/ObservableConvertibleType.html#/s:7RxSwift25ObservableConvertibleTypePAAE12asInfallible17onErrorJustReturnAA0G0Vy7ElementQzGAI_tF":{"name":"asInfallible(onErrorJustReturn:)","abstract":"<p>Convert to an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Infallible.html\">Infallible</a></code></p>","parent_name":"ObservableConvertibleType"},"Protocols/ObservableConvertibleType.html#/s:7RxSwift25ObservableConvertibleTypePAAE12asInfallible17onErrorFallbackToAA0G0Vy7ElementQzGAJ_tF":{"name":"asInfallible(onErrorFallbackTo:)","abstract":"<p>Convert to an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Infallible.html\">Infallible</a></code></p>","parent_name":"ObservableConvertibleType"},"Protocols/ObservableConvertibleType.html#/s:7RxSwift25ObservableConvertibleTypePAAE12asInfallible14onErrorRecoverAA0G0Vy7ElementQzGAJs0I0_pc_tF":{"name":"asInfallible(onErrorRecover:)","abstract":"<p>Convert to an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Infallible.html\">Infallible</a></code></p>","parent_name":"ObservableConvertibleType"},"Classes/Observable.html#/s:7RxSwift14ObservableTypeP9subscribeyAA10Disposable_pqd__AA08ObserverD0Rd__7ElementQyd__AGRtzlF":{"name":"subscribe(_:)","parent_name":"Observable"},"Classes/Observable.html#/s:7RxSwift25ObservableConvertibleTypeP02asC0AA0C0Cy7ElementQzGyF":{"name":"asObservable()","parent_name":"Observable"},"Protocols/ImmediateSchedulerType.html#/s:7RxSwift22ImmediateSchedulerTypeP8schedule_6actionAA10Disposable_pqd___AaF_pqd__ctlF":{"name":"schedule(_:action:)","abstract":"<p>Schedules an action to be executed immediately.</p>","parent_name":"ImmediateSchedulerType"},"Protocols/ImmediateSchedulerType.html#/s:7RxSwift22ImmediateSchedulerTypePAAE17scheduleRecursive_6actionAA10Disposable_pqd___yqd___yqd__XEtctlF":{"name":"scheduleRecursive(_:action:)","abstract":"<p>Schedules an action to be executed recursively.</p>","parent_name":"ImmediateSchedulerType"},"Structs/GroupedObservable.html#/s:7RxSwift17GroupedObservableV3keyxvp":{"name":"key","abstract":"<p>Gets the common key.</p>","parent_name":"GroupedObservable"},"Structs/GroupedObservable.html#/s:7RxSwift17GroupedObservableV3key6sourceACyxq_Gx_AA0D0Cyq_Gtcfc":{"name":"init(key:source:)","abstract":"<p>Initializes grouped observable sequence with key and source observable sequence.</p>","parent_name":"GroupedObservable"},"Structs/GroupedObservable.html#/s:7RxSwift17GroupedObservableV9subscribeyAA10Disposable_pqd__7ElementQyd__Rs_AA12ObserverTypeRd__lF":{"name":"subscribe(_:)","abstract":"<p>Subscribes <code>observer</code> to receive events for this sequence.</p>","parent_name":"GroupedObservable"},"Structs/GroupedObservable.html#/s:7RxSwift17GroupedObservableV02asD0AA0D0Cyq_GyF":{"name":"asObservable()","abstract":"<p>Converts <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable</a></code> sequence.</p>","parent_name":"GroupedObservable"},"Enums/Event.html#/s:7RxSwift5EventO4nextyACyxGxcAEmlF":{"name":"next(_:)","abstract":"<p>Next element is produced.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO5erroryACyxGs5Error_pcAEmlF":{"name":"error(_:)","abstract":"<p>Sequence terminated with an error.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO9completedyACyxGAEmlF":{"name":"completed","abstract":"<p>Sequence completed successfully.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>Description of event.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO06isStopC0Sbvp":{"name":"isStopEvent","abstract":"<p>Is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html#/s:7RxSwift5EventO9completedyACyxGAEmlF\">completed</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html#/s:7RxSwift5EventO5errors5Error_pSgvp\">error</a></code> event.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO7elementxSgvp":{"name":"element","abstract":"<p>If <code>next</code> event, returns element value.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO5errors5Error_pSgvp":{"name":"error","abstract":"<p>If <code>error</code> event, returns error.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO11isCompletedSbvp":{"name":"isCompleted","abstract":"<p>If <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html#/s:7RxSwift5EventO9completedyACyxGAEmlF\">completed</a></code> event, returns <code>true</code>.</p>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO3mapyACyqd__Gqd__xKXElF":{"name":"map(_:)","abstract":"<p>Maps sequence elements using transform. If error happens during the transform, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Event.html#/s:7RxSwift5EventO5errors5Error_pSgvp\">.error</a></code>","parent_name":"Event"},"Enums/Event.html#/s:7RxSwift5EventO5eventACyxGvp":{"name":"event","abstract":"<p>Event representation of this instance</p>","parent_name":"Event"},"Protocols/Disposable.html#/s:7RxSwift10DisposableP7disposeyyF":{"name":"dispose()","abstract":"<p>Dispose resource.</p>","parent_name":"Disposable"},"Protocols/Disposable.html#/s:7RxSwift10DisposablePAAE8disposed2byyAA10DisposeBagC_tF":{"name":"disposed(by:)","abstract":"<p>Adds <code>self</code> to <code>bag</code></p>","parent_name":"Disposable"},"Protocols/ConnectableObservableType.html#/s:7RxSwift25ConnectableObservableTypeP7connectAA10Disposable_pyF":{"name":"connect()","abstract":"<p>Connects the observable wrapper to its source. All subscribed observers will receive values from the underlying observable sequence as long as the connection is established.</p>","parent_name":"ConnectableObservableType"},"Protocols/ConnectableObservableType.html#/s:7RxSwift25ConnectableObservableTypePAAE8refCountAA0D0Cy7ElementQzGyF":{"name":"refCount()","abstract":"<p>Returns an observable sequence that stays connected to the source as long as there is at least one subscription to the observable sequence.</p>","parent_name":"ConnectableObservableType"},"Protocols/Cancelable.html#/s:7RxSwift10CancelableP10isDisposedSbvp":{"name":"isDisposed","abstract":"<p>Was resource disposed.</p>","parent_name":"Cancelable"},"Structs/Binder.html#/s:7RxSwift12ObserverTypeP7ElementQa":{"name":"Element","parent_name":"Binder"},"Structs/Binder.html#/s:7RxSwift6BinderV_9scheduler7bindingACyxGqd___AA22ImmediateSchedulerType_pyqd___xtctcRld__Clufc":{"name":"init(_:scheduler:binding:)","abstract":"<p>Initializes <code>Binder</code></p>","parent_name":"Binder"},"Structs/Binder.html#/s:7RxSwift6BinderV2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Binds next element to owner view as described in <code>binding</code>.</p>","parent_name":"Binder"},"Structs/Binder.html#/s:7RxSwift6BinderV10asObserverAA03AnyE0VyxGyF":{"name":"asObserver()","abstract":"<p>Erases type of observer.</p>","parent_name":"Binder"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV12EventHandlera":{"name":"EventHandler","abstract":"<p>Anonymous event handler type.</p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV12eventHandlerACyxGyAA5EventOyxGc_tcfc":{"name":"init(eventHandler:)","abstract":"<p>Construct an instance whose <code>on(event)</code> calls <code>eventHandler(event)</code></p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverVyACyxGqd__c7ElementQyd__RszAA0D4TypeRd__lufc":{"name":"init(_:)","abstract":"<p>Construct an instance whose <code>on(event)</code> calls <code>observer.on(event)</code></p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV2onyyAA5EventOyxGF":{"name":"on(_:)","abstract":"<p>Send <code>event</code> to this observer.</p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html#/s:7RxSwift11AnyObserverV02asD0ACyxGyF":{"name":"asObserver()","abstract":"<p>Erases type of observer and returns canonical observer.</p>","parent_name":"AnyObserver"},"Structs/AnyObserver.html":{"name":"AnyObserver","abstract":"<p>A type-erased <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ObserverType.html\">ObserverType</a></code>.</p>"},"Structs/Binder.html":{"name":"Binder","abstract":"<p>Observer that enforces interface binding rules:</p>"},"Protocols/Cancelable.html":{"name":"Cancelable","abstract":"<p>Represents disposable resource with state tracking.</p>"},"Protocols/ConnectableObservableType.html":{"name":"ConnectableObservableType","abstract":"<p>Represents an observable sequence wrapper that can be connected and disconnected from its underlying observable sequence.</p>"},"Protocols/Disposable.html":{"name":"Disposable","abstract":"<p>Represents a disposable resource.</p>"},"Enums/Event.html":{"name":"Event","abstract":"<p>Represents a sequence event.</p>"},"Structs/GroupedObservable.html":{"name":"GroupedObservable","abstract":"<p>Represents an observable sequence of elements that have a common key.</p>"},"Protocols/ImmediateSchedulerType.html":{"name":"ImmediateSchedulerType","abstract":"<p>Represents an object that immediately schedules units of work.</p>"},"Classes/Observable.html":{"name":"Observable","abstract":"<p>A type-erased <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ObservableType.html\">ObservableType</a></code>. </p>"},"Protocols/ObservableConvertibleType.html":{"name":"ObservableConvertibleType","abstract":"<p>Type that can be converted to observable sequence (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Observable.html\">Observable&lt;Element&gt;</a></code>).</p>"},"Protocols/ObservableType.html":{"name":"ObservableType","abstract":"<p>Represents a push style sequence.</p>"},"Protocols/ObserverType.html":{"name":"ObserverType","abstract":"<p>Supports push-style iteration over an observable sequence.</p>"},"Structs/Reactive.html":{"name":"Reactive","abstract":"<p>Use <code>Reactive</code> proxy as customization point for constrained protocol extensions.</p>"},"Protocols/SchedulerType.html":{"name":"SchedulerType","abstract":"<p>Represents an object that schedules units of work.</p>"},"RxSwift.html":{"name":"RxSwift"},"RxSwift%2FDisposables.html":{"name":"RxSwift/Disposables"},"RxSwift%2FSchedulers.html":{"name":"RxSwift/Schedulers"},"RxSwift%2FSubjects.html":{"name":"RxSwift/Subjects"},"RxSwift%2FTraits%2FInfallible.html":{"name":"RxSwift/Traits/Infallible"},"RxSwift%2FTraits%2FPrimitiveSequence.html":{"name":"RxSwift/Traits/PrimitiveSequence"},"Other%20Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other%20Global%20Variables.html":{"name":"Other Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Other%20Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other%20Extensions.html":{"name":"Other Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Other%20Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other%20Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"},"Other%20Typealiases.html":{"name":"Other Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}